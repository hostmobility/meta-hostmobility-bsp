From e50fb59f239d3ea3b192d9502da49c764eaabccb Mon Sep 17 00:00:00 2001
From: Mattias Busck <mattias.busck@hostmobility.com>
Date: Wed, 7 Jun 2023 17:05:15 +0200
Subject: [PATCH] tcan4x5x: add direct register read debug

usage example:

trap finish INT

finish()
{
    echo "--- result ---"
    for key in "${!changing[@]}"; do
        if (( changing[$key] != 1 )); then
            echo "${p[$key]} changed ${changing[$key]} times"
        fi
    done
    exit 0
}

regs="0 4 8 c 10 800 804 808 80c 820 824 830 1000 1004 1008 100c 1010 1014 1018 101c 1020 1024 1028 102c 1040 1044 1048 1050 1054 1058 105c 1080 1084 1088 1090 1094 1098 109c 10a0 10a4 10a8 10ac 10b0 10b4 10b8 10bc 10c0 10c4 10c8 10cc 10d0"

value_file=/sys/class/net/can0/device/debug_register
address_file=/sys/class/net/can0/device/debug_register_address

declare -A changing
declare -A p
while true; do
    for reg in $regs; do
        if [[ $reg == "1024" ]]; then continue; fi
        echo "$reg" > $address_file
        read -r val < $value_file
        if [[ $val != "${p[$reg]}" ]]; then
            echo "$val" >> /tmp/reg_"$reg"
            ((changing[$reg]++ == 1))
            #if ((changing[$reg] == 1)); then
                date +"%H:%M:%S new value for register $reg was ${p[$reg]}"
            #fi
            p[$reg]=$val
        fi
    done
done
---
 drivers/net/can/m_can/tcan4x5x-core.c | 59 +++++++++++++++++++++++++++
 drivers/net/can/m_can/tcan4x5x.h      |  1 +
 2 files changed, 60 insertions(+)

diff --git a/drivers/net/can/m_can/tcan4x5x-core.c b/drivers/net/can/m_can/tcan4x5x-core.c
index 53e6010045df..e77c37581c83 100644
--- a/drivers/net/can/m_can/tcan4x5x-core.c
+++ b/drivers/net/can/m_can/tcan4x5x-core.c
@@ -311,6 +311,62 @@ static struct m_can_ops tcan4x5x_ops = {
 	.clear_interrupts = tcan4x5x_clear_interrupts,
 };
 
+static ssize_t select_debug_register(struct device *dev, struct device_attribute *attr, const char *buf, size_t count)
+{
+	/* Select register with hexadecimal value without 0x prefix */
+	struct tcan4x5x_priv *priv = dev_get_drvdata(dev);
+	int scan_result = sscanf(buf, "%X", &priv->tcan4x5x_debug_register_address);  
+	return scan_result == 1 ? count : 0;
+}
+
+static ssize_t get_debug_register(struct device *dev, struct device_attribute *attr, char *buf)
+{
+	int count;
+	int val;
+	struct tcan4x5x_priv *priv = dev_get_drvdata(dev);
+	if (regmap_read(priv->regmap, priv->tcan4x5x_debug_register_address, &val))
+		return 0;
+
+	count = sprintf(buf, "%X", val);
+	return count;
+}
+
+
+static ssize_t set_debug_register(struct device *dev, struct device_attribute *attr, const char *buf, size_t count)
+{
+	struct tcan4x5x_priv *priv = dev_get_drvdata(dev);
+	int val;
+
+	sscanf(buf, "%X", &val);  
+	netdev_warn(priv->cdev.net, "setting %x to %x",priv->tcan4x5x_debug_register_address,val );
+	return regmap_write(priv->regmap, priv->tcan4x5x_debug_register_address, val) ? 0 : count;
+}
+
+static ssize_t nudge(struct device *dev, struct device_attribute *attr, const char * buf, size_t count)
+{
+	struct tcan4x5x_priv *priv = dev_get_drvdata(dev);
+
+	netif_wake_queue(priv->cdev.net);
+	netdev_warn(priv->cdev.net, "nudging");
+	return count;
+}
+
+static DEVICE_ATTR(debug_register_address, S_IWUSR | S_IRUGO, NULL, select_debug_register);
+static DEVICE_ATTR(debug_register, S_IWUSR | S_IRUGO, get_debug_register, set_debug_register);
+static DEVICE_ATTR(nudge, S_IWUSR | S_IRUGO, NULL, nudge);
+
+static struct attribute *tcan4x5x_attributes[] = {
+	&dev_attr_debug_register_address.attr,
+	&dev_attr_debug_register.attr,
+	&dev_attr_nudge.attr,
+	NULL
+};
+
+static const struct attribute_group  tcan4x5x_attribute_group = {
+	.attrs = tcan4x5x_attributes
+};
+
+
 static int tcan4x5x_can_probe(struct spi_device *spi)
 {
 	struct tcan4x5x_priv *priv;
@@ -384,6 +440,7 @@ static int tcan4x5x_can_probe(struct spi_device *spi)
 	if (ret)
 		goto out_power;
 
+	sysfs_create_group(&spi->dev.kobj, &tcan4x5x_attribute_group);
 	netdev_info(mcan_class->net, "TCAN4X5X successfully initialized.\n");
 	return 0;
 
@@ -402,6 +459,8 @@ static int tcan4x5x_can_remove(struct spi_device *spi)
 
 	tcan4x5x_power_enable(priv->power, 0);
 
+	sysfs_remove_group(&spi->dev.kobj, &tcan4x5x_attribute_group);
+
 	m_can_class_free_dev(priv->cdev.net);
 
 	return 0;
diff --git a/drivers/net/can/m_can/tcan4x5x.h b/drivers/net/can/m_can/tcan4x5x.h
index e62c030d3e1e..772fda831c87 100644
--- a/drivers/net/can/m_can/tcan4x5x.h
+++ b/drivers/net/can/m_can/tcan4x5x.h
@@ -42,6 +42,7 @@ struct tcan4x5x_priv {
 
 	struct tcan4x5x_map_buf map_buf_rx;
 	struct tcan4x5x_map_buf map_buf_tx;
+	int tcan4x5x_debug_register_address;
 };
 
 static inline void
-- 
2.30.2

