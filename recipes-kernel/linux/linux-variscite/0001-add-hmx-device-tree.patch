From 734bf3409ec23310476ad07aa00ee2fe71c81e79 Mon Sep 17 00:00:00 2001
From: Mattias Busck <mattias.busck@hostmobility.com>
Date: Fri, 26 Aug 2022 17:40:04 +0200
Subject: [PATCH] Implement device tree according to schematics

* TODO : HSM, USB3 review
---
 arch/arm64/boot/dts/freescale/Makefile        |   2 +
 .../dts/freescale/imx8mp-var-dart-hmx1.dts    | 882 ++++++++++++++++++
 2 files changed, 884 insertions(+)
 create mode 100644 arch/arm64/boot/dts/freescale/imx8mp-var-dart-hmx1.dts

diff --git a/arch/arm64/boot/dts/freescale/Makefile b/arch/arm64/boot/dts/freescale/Makefile
index 4c2a241e6582..886fae1bb704 100644
--- a/arch/arm64/boot/dts/freescale/Makefile
+++ b/arch/arm64/boot/dts/freescale/Makefile
@@ -218,3 +218,5 @@ dtb-$(CONFIG_ARCH_MXC) += imx8ulp-evk.dtb imx8ulp-evk-rk055hdmipi4m.dtb \
 
 dtb-$(CONFIG_ARCH_S32) += s32v234-evb.dtb \
 			  s32v234-sbc.dtb
+
+dtb-$(CONFIG_ARCH_MXC) += imx8mp-var-dart-hmx1.dtb
diff --git a/arch/arm64/boot/dts/freescale/imx8mp-var-dart-hmx1.dts b/arch/arm64/boot/dts/freescale/imx8mp-var-dart-hmx1.dts
new file mode 100644
index 000000000000..2baec7b1a4a2
--- /dev/null
+++ b/arch/arm64/boot/dts/freescale/imx8mp-var-dart-hmx1.dts
@@ -0,0 +1,882 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
+/*
+ * Copyright 2022 Host Mobility AB
+ * Inspired by arch/arm64/boot/dts/freescale/imx8mp-var-dart-dt8mcustomboard.dts 
+ */
+
+#include <dt-bindings/leds/common.h>
+#include "imx8mp-var-dart.dtsi"
+
+/ {
+	model = "Host Mobility HMX1 imx8mp";
+
+	chosen {
+		stdout-path = &uart3;
+	};
+
+	gpio-keys {
+		compatible = "gpio-keys";
+		pinctrl-names = "default";
+		pinctrl-0 = <&pinctrl_digital_input>;
+		status = "okay";
+
+		in_start {
+			label = "IN_START";
+			linux,code = <KEY_MACRO1>;
+			gpios = <&gpio4 21 GPIO_ACTIVE_HIGH>;
+			wakeup-source;
+		};
+
+		in_pulldown1 {
+			label = "IN_PULLDOWN1";
+			linux,code = <KEY_MACRO2>;
+			gpios = <&gpio4 3 GPIO_ACTIVE_HIGH>;
+			wakeup-source;
+		};
+
+		in_pulldown2 {
+			label = "IN_PULLDOWN2";
+			linux,code = <KEY_MACRO3>;
+			gpios = <&gpio4 2 GPIO_ACTIVE_HIGH>;
+			wakeup-source;
+		};
+
+		in_pullup1 {
+			label = "IN_PULLUP1";
+			linux,code = <KEY_MACRO4>;
+			gpios = <&gpio3 20 GPIO_ACTIVE_HIGH>;
+			wakeup-source;
+		};
+
+		in_pullup2 {
+			label = "IN_PULLUP2";
+			linux,code = <KEY_MACRO5>;
+			gpios = <&gpio3 22 GPIO_ACTIVE_HIGH>;
+			wakeup-source;
+		};
+
+		in_hmi1 {
+			label = "IN_HMI1";
+			linux,code = <KEY_MACRO6>;
+			gpios = <&gpio4 0 GPIO_ACTIVE_HIGH>;
+			wakeup-source;
+		};
+
+		in_hmi2 {
+			label = "IN_HMI2";
+			linux,code = <KEY_MACRO7>;
+			gpios = <&gpio4 1 GPIO_ACTIVE_HIGH>;
+			wakeup-source;
+		};
+
+		/* Trigger restart if power is lost and living of super-cap */
+		n_vcc_5v_drop_out {
+			label = "5V_nDROP_OUT";
+			gpios = <&gpio5 13 GPIO_ACTIVE_LOW>;
+			linux,code = <KEY_RESTART>;
+		};
+	};
+
+	gpio-leds {
+		compatible = "gpio-leds";
+		pinctrl-names = "default";
+		pinctrl-0 = <&pinctrl_gpio_leds>;
+		status = "okay";
+
+		red_func {
+			color = <LED_COLOR_ID_RED>;
+			function = "func";
+			gpios = <&gpio3 7 GPIO_ACTIVE_HIGH>;
+			linux,default-trigger = "heartbeat";
+			default-state = "on";
+		};
+		yellow_gps {
+			color = <LED_COLOR_ID_YELLOW>;
+			function = "gps";
+			gpios = <&gpio3 1 GPIO_ACTIVE_HIGH>;
+			default-state = "on";
+		};
+		green_wifi {
+			color = <LED_COLOR_ID_GREEN>;
+			function = LED_FUNCTION_WLAN;
+			gpios = <&gpio3 9 GPIO_ACTIVE_HIGH>;
+			linux,default-trigger = "phy0rx";
+			default-state = "on";
+		};
+		
+		green_gsm {
+			color = <LED_COLOR_ID_GREEN>;
+			function = LED_FUNCTION_WAN;
+			gpios = <&gpio3 6 GPIO_ACTIVE_HIGH>;
+			default-state = "on";
+		};
+
+		green_power {
+			color = <LED_COLOR_ID_GREEN>;
+			function = LED_FUNCTION_POWER;
+			gpios = <&gpio3 8 GPIO_ACTIVE_HIGH>;
+			default-state = "on";
+		};
+
+		/* fault = SOURCE_5_FAULT */
+		pwr_out_buzzer {
+			function = "pwr_out_buzzer";
+			gpios = <&gpio1 0 GPIO_ACTIVE_HIGH>;
+		};
+
+		pwr_out_led_1 {
+			function = "pwr_out_led_1";
+			gpios = <&gpio1 7 GPIO_ACTIVE_HIGH>;
+		};
+
+		pwr_out_led_2 {
+			function = "pwr_out_led_2";
+			gpios = <&gpio1 6 GPIO_ACTIVE_HIGH>;
+		};
+		
+		/* pin = SOURCE_OUT_8, fault = SOURCE_6_FAULT */
+		pwr_out_equipment {
+			function = "pwr_out_equipment";
+			gpios = <&gpio5 5 GPIO_ACTIVE_HIGH>;
+		};
+
+		/* pins = SOURCE_OUT_4, SOURCE_OUT_5, SOURCE_OUT_6 */
+		pwr_out_active {
+			function = "pwr_out_active";
+			gpios = <&gpio1 5 GPIO_ACTIVE_HIGH>;
+		};
+	};
+
+	reg_usdhc2_vmmc: regulator-usdhc2-vmmc {
+		compatible = "regulator-fixed";
+		regulator-name = "SD_POWER_REG";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		gpio = <&gpio2 19 GPIO_ACTIVE_HIGH>;
+		enable-active-high;
+		startup-delay-us = <100>;
+		off-on-delay-us = <12000>;
+	};
+
+
+	can0_osc: can0_osc {
+		compatible = "fixed-clock";
+		#clock-cells = <0>;
+		clock-frequency = <40000000>;
+	};
+	can3_osc: can3_osc {
+		compatible = "fixed-clock";
+		#clock-cells = <0>;
+		clock-frequency = <40000000>;
+	};
+	can4_osc: can4_osc {
+		compatible = "fixed-clock";
+		#clock-cells = <0>;
+		clock-frequency = <40000000>;
+	};
+	can5_osc: can5_osc {
+		compatible = "fixed-clock";
+		#clock-cells = <0>;
+		clock-frequency = <40000000>;
+	};
+
+
+	extcon_usb1: extcon_usb1 {
+		compatible = "linux,extcon-usb-gpio";
+		pinctrl-names = "default";
+		pinctrl-0 = <&pinctrl_extcon>;
+		id-gpio = <&gpio1 10 GPIO_ACTIVE_HIGH>;
+		status = "okay";
+	};
+};
+
+/* TODO: Adapt these when we have the phys designed in */
+/*
+&eqos {
+	mdio {
+		ethphy1: ethernet-phy@1 {
+			compatible = "ethernet-phy-ieee802.3-c22";
+			reg = <1>;
+			at803x,eee-disabled;
+			at803x,vddio-1p8v;
+			eee-broken-1000t;
+		};
+	};
+};
+
+&fec {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_fec>;
+	phy-mode = "rgmii";
+	phy-handle = <&ethphy1>;
+	phy-reset-gpios = <&pca6408_2 0 GPIO_ACTIVE_LOW>;
+	phy-reset-duration = <10>;
+	phy-reset-post-delay = <100>;
+	status = "okay";
+};
+*/
+
+
+&i2c2 {
+	clock-frequency = <400000>;
+	pinctrl-names = "default", "gpio";
+	pinctrl-0 = <&pinctrl_i2c2>;
+	pinctrl-1 = <&pinctrl_i2c2_gpio>;
+	scl-gpios = <&gpio5 16 GPIO_ACTIVE_HIGH>;
+	sda-gpios = <&gpio5 17 GPIO_ACTIVE_HIGH>;
+	status = "okay";
+
+	/* A0 A1 A2 pins == 0 => addr 0x20 */
+	/* TODO limit this gpio expander to input */
+	pca9535: gpio-expander@20 {
+		compatible = "nxp,pca9535";
+		reg = <0x20>;
+		gpio-controller;
+		#gpio-cells = <2>;
+            	gpio-line-names = "SINK_FAULT",
+				  "SOURCE_1_FAULT", "SOURCE_2_FAULT",
+				  "SOURCE_3_FAULT", "SOURCE_4_FAULT",
+				  "SOURCE_5_FAULT", "SOURCE_6_FAULT";
+		pinctrl-names = "default";
+		pinctrl-0 = <&pinctrl_pca9535>;
+		interrupt-parent = <&gpio1>;
+		interrupts = <11 IRQ_TYPE_LEVEL_LOW>;
+		interrupt-controller;
+		#interrupt-cells = <2>;
+	};
+
+	/* NXP PCF85063A RTC module */
+	rtc@51 {
+		compatible = "nxp,pcf85063";
+		reg = <0x51>;
+		quartz-load-femtofarads = <12500>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&pinctrl_rtc>;
+		interrupt-parent = <&gpio1>;
+		interrupts = <9 IRQ_TYPE_EDGE_FALLING>;
+		wakeup-source;
+		status = "okay";
+	};
+
+	/* TMP103D has address 0x73 */
+	temperature-sensor@73 {
+		compatible = "ti,tmp103";
+		reg = <0x73>;
+	};
+};
+
+&i2c4 {
+	clock-frequency = <400000>;
+	pinctrl-names = "default", "gpio";
+	pinctrl-0 = <&pinctrl_i2c4>;
+	pinctrl-1 = <&pinctrl_i2c4_gpio>;
+	scl-gpios = <&gpio5 20 GPIO_ACTIVE_HIGH>;
+	sda-gpios = <&gpio5 21 GPIO_ACTIVE_HIGH>;
+	status = "okay";
+
+	accelerometer@30 {
+		pinctrl-names = "default";
+		pinctrl-0 = <&pinctrl_acc>;
+		compatible = "st,lis2hh12";
+		reg = <0x30>;
+		st,drdy-int-pin = <1>;
+		interrupt-parent = <&gpio5>;
+		interrupts = <0 IRQ_TYPE_EDGE_FALLING>;
+		drive-open-drain = <1>;
+		status = "okay";
+	};
+
+	/* TODO HSM */
+
+};
+
+&flexcan1 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_flexcan1>;
+	status = "okay";
+};
+
+&flexcan2 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_flexcan2>;
+	status = "okay";
+};
+
+
+&pcie {
+	//  TODO: schematics says do not know if 
+	    //these should be used
+	//reset-gpio = <&pca6408_2 3 GPIO_ACTIVE_LOW>;
+	//
+	ext_osc = <1>;
+	clocks = <&clk IMX8MP_CLK_HSIO_ROOT>,
+		 <&clk IMX8MP_CLK_PCIE_AUX>,
+		 <&clk IMX8MP_CLK_HSIO_AXI>,
+		 <&clk IMX8MP_CLK_PCIE_ROOT>;
+	clock-names = "pcie", "pcie_aux", "pcie_phy", "pcie_bus";
+	assigned-clocks = <&clk IMX8MP_CLK_HSIO_AXI>,
+			  <&clk IMX8MP_CLK_PCIE_AUX>;
+	assigned-clock-rates = <500000000>, <10000000>;
+	assigned-clock-parents = <&clk IMX8MP_SYS_PLL2_500M>,
+				 <&clk IMX8MP_SYS_PLL2_50M>;
+	l1ss-disabled;
+	status = "okay";
+};
+
+&pcie_phy {
+	ext_osc = <1>;
+	status = "okay";
+};
+
+/* UART -> FTDI Header */
+&uart3 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_uart3>;
+	status = "okay";
+};
+
+&usb3_phy0 {
+	fsl,phy-tx-vref-tune = <0xe>;
+	fsl,phy-tx-preemp-amp-tune = <3>;
+	fsl,phy-tx-vboost-level = <5>;
+	fsl,phy-comp-dis-tune = <7>;
+	fsl,pcs-tx-deemph-3p5db = <0x21>;
+	fsl,phy-pcs-tx-swing-full = <0x7f>;
+	status = "okay";
+};
+
+&usb3_0 {
+	status = "okay";
+};
+
+&usb_dwc3_0 {
+	dr_mode = "otg";
+	hnp-disable;
+	srp-disable;
+	adp-disable;
+	extcon = <&extcon_usb1>;
+	status = "okay";
+};
+
+&usb3_phy1 {
+	fsl,phy-tx-preemp-amp-tune = <3>;
+	fsl,phy-tx-vref-tune = <0xb>;
+	status = "okay";
+};
+
+&usb3_1 {
+	status = "okay";
+};
+
+&usb_dwc3_1 {
+	dr_mode = "host";
+	status = "okay";
+};
+
+/* SD card */
+&usdhc2 {
+	pinctrl-names = "default", "state_100mhz", "state_200mhz";
+	pinctrl-0 = <&pinctrl_usdhc2>, <&pinctrl_usdhc2_gpio>;
+	pinctrl-1 = <&pinctrl_usdhc2_100mhz>, <&pinctrl_usdhc2_gpio>;
+	pinctrl-2 = <&pinctrl_usdhc2_200mhz>, <&pinctrl_usdhc2_gpio>;
+	cd-gpios = <&gpio2 12 GPIO_ACTIVE_LOW>;
+	vmmc-supply = <&reg_usdhc2_vmmc>;
+	bus-width = <4>;
+	status = "okay";
+};
+
+
+&ecspi1 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_ecspi1>;
+	cs-gpios = <&gpio5  9 GPIO_ACTIVE_LOW>,
+		   <&gpio1 15 GPIO_ACTIVE_LOW>,
+		   <&gpio3 21 GPIO_ACTIVE_LOW>,
+		   <&gpio3 23 GPIO_ACTIVE_LOW>;
+	status = "okay";
+
+	/* Note: can1 and can2 are on SOC internal flexcan1,flexcan2 */
+
+	can1_xcvr: tcan1146@0 {
+		compatible = "hostmobility,tcan1146";
+		reg = <0>;
+		status = "okay";
+	};
+	can2_xcvr: tcan1146@1 {
+		compatible = "hostmobility,tcan1146";
+		reg = <1>;
+		status = "okay";
+	};
+	/* CAN-FD controller 4 in schematics */
+	can3: tcan4x5x@2 {
+		compatible = "ti,tcan4x5x";
+		reg = <2>;
+		#address-cells = <1>;
+		#size-cells = <1>;
+		spi-max-frequency = <18000000>;
+		clocks = <&can3_osc>;
+		bosch,mram-cfg = <0x0 0 0 32 0 0 1 1>;
+		interrupt-parent = <&gpio4>;
+		interrupts = <27 IRQ_TYPE_LEVEL_LOW>;
+	};
+	/* CAN-FD controller 6 in schematics */
+	can5: tcan4x5x@3 {
+		compatible = "ti,tcan4x5x";
+		reg = <3>;
+		#address-cells = <1>;
+		#size-cells = <1>;
+		spi-max-frequency = <18000000>;
+		clocks = <&can5_osc>;
+		bosch,mram-cfg = <0x0 0 0 32 0 0 1 1>;
+		interrupt-parent = <&gpio4>;
+		interrupts = <26 IRQ_TYPE_LEVEL_LOW>;
+	};
+};
+
+&ecspi3 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_ecspi3>;
+	cs-gpios = <&gpio5 25 GPIO_ACTIVE_LOW>,
+		   <&gpio3 19 GPIO_ACTIVE_LOW>;
+	status = "okay";
+
+	/* CAN-FD controller 1 in schematics */
+	can0: tcan4x5x@0 {
+		compatible = "ti,tcan4x5x";
+		reg = <0>;
+		#address-cells = <1>;
+		#size-cells = <1>;
+		spi-max-frequency = <18000000>;
+		clocks = <&can0_osc>;
+		bosch,mram-cfg = <0x0 0 0 32 0 0 1 1>;
+		interrupt-parent = <&gpio4>;
+		interrupts = <24 IRQ_TYPE_LEVEL_LOW>;
+		device-wake-gpios = <&gpio5 28 GPIO_ACTIVE_HIGH>;
+		reset-gpios = <&gpio5 28 GPIO_ACTIVE_HIGH>;
+	};
+	/* CAN-FD controller 5 in schematics */
+	can4: tcan4x5x@0 {
+		compatible = "ti,tcan4x5x";
+		reg = <0>;
+		#address-cells = <1>;
+		#size-cells = <1>;
+		spi-max-frequency = <18000000>;
+		clocks = <&can4_osc>;
+		bosch,mram-cfg = <0x0 0 0 32 0 0 1 1>;
+		interrupt-parent = <&gpio4>;
+		interrupts = <23 IRQ_TYPE_LEVEL_LOW>;
+	};
+};
+
+&ldo4 {
+	regulator-min-microvolt = <1800000>;
+	regulator-max-microvolt = <1800000>;
+};
+
+&iomuxc {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_hog>;
+	/* Digital out as GPIO. 0x0 = slow slew, x1 drive, push/pull
+	 * pins = OUT_SOURCE1, OUT_SOURCE2, OUT_SINK1, OUT_SINK2, 
+	 * ETH2_ACT
+	 */
+	
+	pinctrl_hog: hoggrp {
+		fsl,pins = <
+			MX8MP_IOMUXC_SPDIF_TX__GPIO5_IO03	0x0
+			MX8MP_IOMUXC_I2C3_SCL__GPIO5_IO18	0x0
+			MX8MP_IOMUXC_GPIO1_IO01__GPIO1_IO01	0x0
+			MX8MP_IOMUXC_SPDIF_RX__GPIO5_IO04	0x0                     
+
+			MX8MP_IOMUXC_GPIO1_IO14__GPIO1_IO14	0x0
+
+		>;
+	};
+
+	pinctrl_fec: fecgrp {
+		fsl,pins = <
+			MX8MP_IOMUXC_SAI1_RXD4__ENET1_RGMII_RD0				0x90
+			MX8MP_IOMUXC_SAI1_RXD5__ENET1_RGMII_RD1				0x90
+			MX8MP_IOMUXC_SAI1_RXD6__ENET1_RGMII_RD2				0x90
+			MX8MP_IOMUXC_SAI1_RXD7__ENET1_RGMII_RD3				0x90
+			MX8MP_IOMUXC_SAI1_TXC__ENET1_RGMII_RXC				0x90
+			MX8MP_IOMUXC_SAI1_TXFS__ENET1_RGMII_RX_CTL			0x90
+			MX8MP_IOMUXC_SAI1_TXD0__ENET1_RGMII_TD0				0x00
+			MX8MP_IOMUXC_SAI1_TXD1__ENET1_RGMII_TD1				0x00
+			MX8MP_IOMUXC_SAI1_TXD2__ENET1_RGMII_TD2				0x00
+			MX8MP_IOMUXC_SAI1_TXD3__ENET1_RGMII_TD3				0x00
+			MX8MP_IOMUXC_SAI1_TXD4__ENET1_RGMII_TX_CTL			0x00
+			MX8MP_IOMUXC_SAI1_TXD5__ENET1_RGMII_TXC				0x00
+		>;
+	};
+
+	pinctrl_i2c2: i2c2grp {
+		fsl,pins = <
+			MX8MP_IOMUXC_I2C2_SCL__I2C2_SCL					0x400001c2
+			MX8MP_IOMUXC_I2C2_SDA__I2C2_SDA					0x400001c2
+		>;
+	};
+
+	pinctrl_i2c4: i2c4grp {
+		fsl,pins = <
+			MX8MP_IOMUXC_I2C4_SCL__I2C4_SCL					0x400001c2
+			MX8MP_IOMUXC_I2C4_SDA__I2C4_SDA					0x400001c2
+		>;
+	};
+
+	pinctrl_i2c2_gpio: i2c2gpiogrp {
+		fsl,pins = <
+			MX8MP_IOMUXC_I2C2_SCL__GPIO5_IO16				0x1c2
+			MX8MP_IOMUXC_I2C2_SDA__GPIO5_IO17				0x1c2
+		>;
+	};
+
+	pinctrl_i2c4_gpio: i2c4gpiogrp {
+		fsl,pins = <
+			MX8MP_IOMUXC_I2C4_SCL__GPIO5_IO20				0x1c2
+			MX8MP_IOMUXC_I2C4_SDA__GPIO5_IO21				0x1c2
+		>;
+	};
+
+	pinctrl_uart3: uart3grp {
+		fsl,pins = <
+			MX8MP_IOMUXC_UART3_RXD__UART3_DCE_RX				0x40
+			MX8MP_IOMUXC_UART3_TXD__UART3_DCE_TX				0x40
+		>;
+	};
+
+	/* Bluetooth */
+	pinctrl_uart4: uart4grp {
+		fsl,pins = <
+			MX8MP_IOMUXC_ECSPI2_SCLK__UART4_DCE_RX				0x140
+			MX8MP_IOMUXC_ECSPI2_MOSI__UART4_DCE_TX				0x140
+			MX8MP_IOMUXC_ECSPI2_MISO__UART4_DCE_CTS				0x140
+			MX8MP_IOMUXC_ECSPI2_SS0__UART4_DCE_RTS				0x140
+		>;
+	};
+	pinctrl_usdhc2_gpio: usdhc2grp-gpio {
+		fsl,pins = <
+			MX8MP_IOMUXC_SD2_CD_B__GPIO2_IO12 				0x1c4
+			MX8MP_IOMUXC_SD2_RESET_B__GPIO2_IO19				0x40
+		>;
+	};
+
+	pinctrl_usdhc2: usdhc2grp {
+		fsl,pins = <
+			MX8MP_IOMUXC_SD2_CLK__USDHC2_CLK				0x190
+			MX8MP_IOMUXC_SD2_CMD__USDHC2_CMD				0x1d0
+			MX8MP_IOMUXC_SD2_DATA0__USDHC2_DATA0				0x1d0
+			MX8MP_IOMUXC_SD2_DATA1__USDHC2_DATA1				0x1d0
+			MX8MP_IOMUXC_SD2_DATA2__USDHC2_DATA2				0x1d0
+			MX8MP_IOMUXC_SD2_DATA3__USDHC2_DATA3				0x1d0
+			MX8MP_IOMUXC_GPIO1_IO04__USDHC2_VSELECT				0xc0
+		>;
+	};
+
+	pinctrl_usdhc2_100mhz: usdhc2grp-100mhz {
+		fsl,pins = <
+			MX8MP_IOMUXC_SD2_CLK__USDHC2_CLK				0x194
+			MX8MP_IOMUXC_SD2_CMD__USDHC2_CMD				0x1d4
+			MX8MP_IOMUXC_SD2_DATA0__USDHC2_DATA0				0x1d4
+			MX8MP_IOMUXC_SD2_DATA1__USDHC2_DATA1				0x1d4
+			MX8MP_IOMUXC_SD2_DATA2__USDHC2_DATA2				0x1d4
+			MX8MP_IOMUXC_SD2_DATA3__USDHC2_DATA3				0x1d4
+			MX8MP_IOMUXC_GPIO1_IO04__USDHC2_VSELECT 			0xc0
+		>;
+	};
+
+	pinctrl_usdhc2_200mhz: usdhc2grp-200mhz {
+		fsl,pins = <
+			MX8MP_IOMUXC_SD2_CLK__USDHC2_CLK				0x196
+			MX8MP_IOMUXC_SD2_CMD__USDHC2_CMD				0x1d6
+			MX8MP_IOMUXC_SD2_DATA0__USDHC2_DATA0				0x1d6
+			MX8MP_IOMUXC_SD2_DATA1__USDHC2_DATA1				0x1d6
+			MX8MP_IOMUXC_SD2_DATA2__USDHC2_DATA2				0x1d6
+			MX8MP_IOMUXC_SD2_DATA3__USDHC2_DATA3				0x1d6
+			MX8MP_IOMUXC_GPIO1_IO04__USDHC2_VSELECT 			0xc0
+		>;
+	};
+
+	pinctrl_ecspi1: ecspi1grp {
+		fsl,pins = <
+			MX8MP_IOMUXC_ECSPI1_SCLK__ECSPI1_SCLK				0x12
+			MX8MP_IOMUXC_ECSPI1_MOSI__ECSPI1_MOSI				0x12
+			MX8MP_IOMUXC_ECSPI1_MISO__ECSPI1_MISO				0x12
+			MX8MP_IOMUXC_ECSPI1_SS0__GPIO5_IO09				0x12
+			MX8MP_IOMUXC_GPIO1_IO15__GPIO1_IO15				0x12
+			MX8MP_IOMUXC_SAI5_RXD0__GPIO3_IO21				0x12
+			MX8MP_IOMUXC_SAI5_RXD2__GPIO3_IO23				0x12
+			/* can3, can5 irqs */
+			MX8MP_IOMUXC_SAI2_MCLK__GPIO4_IO27				0x12
+			MX8MP_IOMUXC_SAI2_TXD0__GPIO4_IO26				0x12
+
+			
+		>;
+	};
+
+	pinctrl_ecspi3: ecspi3grp {
+		fsl,pins = <
+			MX8MP_IOMUXC_UART1_RXD__ECSPI3_SCLK				0x12
+			MX8MP_IOMUXC_UART1_TXD__ECSPI3_MOSI				0x12
+			MX8MP_IOMUXC_UART2_RXD__ECSPI3_MISO				0x12
+			MX8MP_IOMUXC_UART2_TXD__GPIO5_IO25                              0x12
+			MX8MP_IOMUXC_SAI5_RXFS__GPIO3_IO19				0x12
+			/* can0, can4 irqs */
+			MX8MP_IOMUXC_SAI2_TXFS__GPIO4_IO24                           	0x12
+			MX8MP_IOMUXC_SAI2_RXD0__GPIO4_IO23				0x12
+		>;
+	};
+
+	pinctrl_extcon: extcongrp {
+		fsl,pins = <
+			MX8MP_IOMUXC_GPIO1_IO10__GPIO1_IO10				0x10
+		>;
+	};
+
+	pinctrl_flexcan1: flexcan1grp {
+		fsl,pins = <
+			MX8MP_IOMUXC_SAI2_RXC__CAN1_TX					0x154
+			MX8MP_IOMUXC_SAI2_TXC__CAN1_RX					0x154
+		>;
+	};
+
+	pinctrl_flexcan2: flexcan2grp {
+		fsl,pins = <
+			MX8MP_IOMUXC_SAI5_MCLK__CAN2_RX					0x154
+			MX8MP_IOMUXC_SAI5_RXD3__CAN2_TX					0x154
+		>;
+	};
+
+	pinctrl_can: cangrp {
+		fsl,pins = <
+			MX8MP_IOMUXC_GPIO1_IO06__GPIO1_IO06				0x1c6
+			MX8MP_IOMUXC_SPDIF_RX__GPIO5_IO04				0x16
+		>;
+	};
+
+	/* Accelerometer IRQ line. 0x1c0 = pull up + Schmitt trigger */
+	pinctrl_acc: acc_grp {
+		fsl,pins = <
+			MX8MP_IOMUXC_SAI3_MCLK__GPIO5_IO02				0x1c0
+		>;
+	};
+
+	/* Inputs START, PULLDOWN1, PULLDOWN2, PULLUP1, PULLUP2, HMI1, HMI2, 5V_nDROP_OUT*/
+	/* Ref manual search: PAD_CTL_PAD_SAI2_RXFS */
+			
+	pinctrl_digital_input: digital_input_grp {
+		/* No pull, Schmitt trigger input = 0x80 */
+		fsl,pins = <
+			MX8MP_IOMUXC_SAI2_RXFS__GPIO4_IO21				0x80
+			MX8MP_IOMUXC_SAI1_RXD1__GPIO4_IO03				0x80
+			MX8MP_IOMUXC_SAI1_RXD0__GPIO4_IO02				0x80
+			MX8MP_IOMUXC_SAI5_RXC__GPIO3_IO20				0x80
+			MX8MP_IOMUXC_SAI5_RXD1__GPIO3_IO22			 	0x80
+			MX8MP_IOMUXC_SAI1_RXFS__GPIO4_IO00 				0x80
+			MX8MP_IOMUXC_SAI1_RXC__GPIO4_IO01 				0x80
+			MX8MP_IOMUXC_ECSPI2_SS0__GPIO5_IO13				0x80
+		>;
+	};
+
+	pinctrl_pca9535: pca9535grp {
+		fsl,pins = <
+			MX8MP_IOMUXC_GPIO1_IO11__GPIO1_IO11				0x1c6
+		>;
+	};
+
+	/* SOURCE_OUT_4/5/6, SOURCE_OUT_8, pwr_out_led_2, pwr_out_led_1
+	 * OUT_BUZZER,   
+	/* 0x2 = drive strength x2, slow slew, no pull  */
+	pinctrl_gpio_leds: ledgrp {
+		fsl,pins = <
+			MX8MP_IOMUXC_GPIO1_IO05__GPIO1_IO05	0x2
+			MX8MP_IOMUXC_SPDIF_EXT_CLK__GPIO5_IO05  0x2
+			MX8MP_IOMUXC_GPIO1_IO06__GPIO1_IO06	0x2
+			MX8MP_IOMUXC_GPIO1_IO07__GPIO1_IO07	0x2
+			
+			MX8MP_IOMUXC_GPIO1_IO00__GPIO1_IO00	0x2
+		>;
+	};
+
+	/* 0x1c0 == Schmitt trigger hysteresis, pull up */
+	pinctrl_rtc: rtcgrp {
+		fsl,pins = <
+			MX8MP_IOMUXC_GPIO1_IO09__GPIO1_IO09 				0x1c0
+		>;
+	};
+};
+
+&gpio1 {
+	gpio-line-names = "OUT_BUZZER",
+		"OUT_SINK1",
+		"nWDOG",
+		"GPIO1_IO03",
+		"GPIO1_IO04",
+		"SOURCE_4",
+		"EXT_LED_2",
+		"EXT_LED_1",
+		"GPIO1_IO08",
+		"nRTC_INT",
+		"MODEM_PWR",
+		"nGPIO_EXP_INT",
+		"nRST_ETH",
+		"GPIO1_IO13_5V_nDROP_OUT",
+		"ETH2_ACT",
+		"ESPI1_SS1",
+		"ENET_QOS_MDC",
+		"ENET_QOS_MDIO",
+		"ENET_QOS_RGMII_TD3",
+		"ENET_QOS_RGMII_TD2",
+		"ENET_QOS_RGMII_TD1",
+		"ENET_QOS_RGMII_TD0",
+		"ENET_QOS_RGMII_TX_CTL",
+		"ENET_QOS_RGMII_TXC",
+		"ENET_QOS_RGMII_RX_CTL",
+		"ENET_QOS_RGMII_RXC",
+		"ENET_QOS_RGMII_RD0",
+		"ENET_QOS_RGMII_RD1",
+		"ENET_QOS_RGMII_RD2",
+		"ENET_QOS_RGMII_RD3",
+		"GPIO1_IO30",
+		"GPIO1_IO31";
+};
+
+&gpio2 {
+	gpio-line-names = "GPIO2_IO00",
+		"GPIO2_IO01",
+		"GPIO2_IO02",
+		"GPIO2_IO03",
+		"GPIO2_IO04",
+		"GPIO2_IO05",
+		"GPIO2_IO06",
+		"GPIO2_IO07",
+		"GPIO2_IO08",
+		"GPIO2_IO09",
+		"SD2_WP",
+		"GPIO2_IO11",
+		"CONN_SD2_CD_B",
+		"CONN_SD2_CLK",
+		"CONN_SD2_CMD",
+		"CONN_SD2_DATA0",
+		"CONN_SD2_DATA1",
+		"CONN_SD2_DATA2",
+		"CONN_SD2_DATA3",
+		"CONN_SD2_nRST",
+		"GPIO2_IO20",
+		"GPIO2_IO21",
+		"GPIO2_IO22",
+		"GPIO2_IO23",
+		"GPIO2_IO24",
+		"GPIO2_IO25",
+		"GPIO2_IO26",
+		"GPIO2_IO27",
+		"GPIO2_IO28",
+		"GPIO2_IO29",
+		"GPIO2_IO30",
+		"GPIO2_IO31";
+};
+
+&gpio3 {
+	gpio-line-names = "USB_UPGRADE_BUTTON",
+		"USER_LED_2_PWR",
+		"GPIO3_IO02",
+		"GPIO3_IO03",
+		"GPIO3_IO04",
+		"GPIO3_IO05",
+		"LED4",
+		"USER_LED_1_PWR",
+		"LED5",
+		"LED3",
+		"GPIO3_IO10",
+		"GPIO3_IO11",
+		"GPIO3_IO12",
+		"GPIO3_IO13",
+		"nWKRQ_CANFD",
+		"GPIO3_IO15",
+		"GPIO3_IO16",
+		"GPIO3_IO17",
+		"GPIO3_IO18",
+		"ECSPI1_SS1",
+		"IN_PULLUP1",
+		"ECSPI1_SS2",
+		"IN_PULLUP2",
+		"ECSPI1_SS3",
+		"FLEXCAN2_TX",
+		"FLEXCAN2_RX",
+		"HDMI_DDC_SCL_future",
+		"HDMI_DDC_SDA_future",
+		"HDMI_CEC_future",
+		"HDMI_HPD_future",
+		"GPIO3_IO30",
+		"GPIO3_IO31";
+};
+
+&gpio4 {
+	gpio-line-names = "IN_HMI1",
+		"IN_HMI2",
+		"IN_PULLDOWN2",
+		"IN_PULLDOWN1",
+		"ENET1_MDC",
+		"ENET1_MDIO",
+		"ENET1_RGMII_RD0",
+		"ENET1_RGMII_RD1",
+		"ENET1_RGMII_RD2",
+		"ENET1_RGMII_RD3",
+		"ENET1_RGMII_RX_CTL",
+		"ENET1_RGMII_RXC",
+		"ENET1_RGMII_TD0",
+		"ENET1_RGMII_TD1",
+		"ENET1_RGMII_TD2",
+		"ENET1_RGMII_TD3",
+		"ENET1_RGMII_TX_CTL",
+		"ENET1_RGMII_TXC",
+		"nWAKE_ON_WAN",
+		"POWER_OFF",
+		"MODEM_RST",
+		"IN_START",
+		"FLEXCAN1_TX",
+		"nINT_CANFD5",
+		"nINT_CANFD3",
+		"FLEXCAN1_RX",
+		"nINT_CANFD6",
+		"nINT_CANFD4",
+		"HPOUTFB_future",
+		"LINEIN1_LP_future",
+		"HPLOUT_future", "LINEIN1_RP_future";
+};
+
+&gpio5 {
+	gpio-line-names = "HPROUT_future",
+		"nHSM_SLEEP",
+		"ACC_INT1",
+		"OUT_SOURCE1",
+		"OUT_SINK2",
+		"OUT_SOURCE8",
+		"ECSPI1_SCLK",
+		"ECSPI1_MOSI",
+		"ECSPI1_MISO",
+		"ECSPI1_SS0",
+		"GPIO5_IO10_internal_wb",
+		"GPIO5_IO11_internal_wb",
+		"GPIO5_IO12_internal_wb",
+		"GPIO5_IO13_internal_wb",
+		"GPIO5_IO14",
+		"GPIO5_IO15",
+		"I2C2_SCL",
+		"I2C2_SDA",
+		"OUT_SOURCE2",
+		"GPIO5_IO19",
+		"I2C4_SCL",
+		"I2C4_SDA",
+		"ECSPI3_SCLK",
+		"ECSPI3_MOSI",
+		"ECSPI3_MISO",
+		"ECSPI3_SS0",
+		"UART1_RXD",
+		"UART1_TXD",
+		"CAN_WAKE",
+		"CAN_RST",
+		"GPIO5_IO30",
+		"GPIO5_IO31";
+};
+
-- 
2.30.2

