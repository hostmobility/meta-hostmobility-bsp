From 25a0430a1e092cc8a098121733815af1b26e11e9 Mon Sep 17 00:00:00 2001
From: rikardo <rikard.olander@hostmobility.com>
Date: Tue, 19 Nov 2024 15:48:52 +0000
Subject: [PATCH 3/3] HMM customization

---
 board/toradex/common/tdx-common.c       | 62 +++++++++++++++++++++++++
 board/toradex/verdin-am62/verdin-am62.c | 18 ++++++-
 include/configs/verdin-am62.h           | 41 +++++++++-------
 3 files changed, 102 insertions(+), 19 deletions(-)

diff --git a/board/toradex/common/tdx-common.c b/board/toradex/common/tdx-common.c
index d144914397..d0bcae7012 100644
--- a/board/toradex/common/tdx-common.c
+++ b/board/toradex/common/tdx-common.c
@@ -1,6 +1,7 @@
 // SPDX-License-Identifier: GPL-2.0+
 /*
  * Copyright (c) 2016 Toradex, Inc.
+ * Copyright 2024 SETEK Systems AB
  */
 
 #include <common.h>
@@ -181,6 +182,17 @@ int g_dnl_bind_fixup(struct usb_device_descriptor *dev, const char *name)
 #if defined(CONFIG_OF_LIBFDT)
 int ft_common_board_setup(void *blob, struct bd_info *bd)
 {
+	/* Set serial number and part number from environment to device tree blob chosen.
+		serial-number = "23078888";
+		part-number = "hmp00xx"; 
+		product-number = hmxxx;.
+	*/
+	char *serial;
+	char *part;
+	char *product;
+	int offset;
+	int err = 1;
+	const char *path;
 	if (tdx_serial) {
 		fdt_setprop(blob, 0, "serial-number", tdx_serial_str,
 			    strlen(tdx_serial_str) + 1);
@@ -196,6 +208,56 @@ int ft_common_board_setup(void *blob, struct bd_info *bd)
 			    strlen(tdx_board_rev_str) + 1);
 	}
 
+	path = "/chosen";
+	offset = fdt_path_offset(blob, path);
+	if (offset < 0) {
+		printf("WARNING: Node %s not found in device tree.\n", path);
+		return err;
+	}
+
+	debug("ft_board_setup: config FDT\n");
+
+	serial = env_get("serial");
+	if (serial) {
+		err = fdt_setprop(blob, offset, "serial-number", serial,
+				  strlen(serial) + 1);
+
+		if (err < 0) {
+			printf("WARNING: could not set serial-number %s.\n",
+			       fdt_strerror(err));
+			return err;
+		}
+	} else {
+		printf("WARNING: could not read serial-number from env list.\n");
+	}
+	part = env_get("part_nr");
+	if (part) {
+		err = fdt_setprop(blob, offset, "part-number", part,
+				  strlen(part) + 1);
+
+		if (err < 0) {
+			printf("WARNING: could not set part-number %s.\n",
+			       fdt_strerror(err));
+			return err;
+		}
+	} else {
+		printf("WARNING: could not read part-number from env list.\n");
+	}
+	product = env_get("product_nr");
+	if (product) {
+		err = fdt_setprop(blob, offset, "product-number", product,
+				  strlen(product) + 1);
+
+		if (err < 0) {
+			printf("WARNING: could not set product-number %s.\n",
+			       fdt_strerror(err));
+			return err;
+		}
+	} else {
+		printf("WARNING: could not read product-number from env list.\n");
+	}
+
+
 	return 0;
 }
 #endif
diff --git a/board/toradex/verdin-am62/verdin-am62.c b/board/toradex/verdin-am62/verdin-am62.c
index 3d699f3205..b819ab5293 100644
--- a/board/toradex/verdin-am62/verdin-am62.c
+++ b/board/toradex/verdin-am62/verdin-am62.c
@@ -3,7 +3,7 @@
  * Board specific initialization for Verdin AM62 SoM
  *
  * Copyright 2023 Toradex - https://www.toradex.com/
- *
+ * Copyright 2024 SETEK Systems AB
  */
 
 #include <asm/arch/hardware.h>
@@ -15,6 +15,8 @@
 #include <k3-ddrss.h>
 #include <spl.h>
 
+#include "../common/hmm_eeprom.h"
+
 #include "../common/tdx-cfg-block.h"
 
 DECLARE_GLOBAL_DATA_PTR;
@@ -84,8 +86,22 @@ static void select_dt_from_module_version(void)
 
 int board_late_init(void)
 {
+	uchar eeprom_data [0xffff];
+	int err = 1;
+
 	select_dt_from_module_version();
 
+	/* HMM get env from eeprom serial number, partnumber and mac adress(eth2addr, eth3addr) and more */
+	err = get_environment_data_from_eeprom(eeprom_data);
+	if (err != 0) {
+		printf("Failed to get environment data from eeprom, error: %x\n", err);
+	} else {
+		err = set_environment_data_from_eeprom((char *)eeprom_data);
+		if (err != 0) {
+			printf("Failed to set environment data to environment area failed, error: %x\n", err);
+		}
+	}
+
 	return 0;
 }
 
diff --git a/include/configs/verdin-am62.h b/include/configs/verdin-am62.h
index a2cbcce33d..9cb9f0c59e 100644
--- a/include/configs/verdin-am62.h
+++ b/include/configs/verdin-am62.h
@@ -3,6 +3,7 @@
  * Configuration header file for Verdin AM62 SoM
  *
  * Copyright 2023 Toradex - https://www.toradex.com/
+ * Copyright 2024 SETEK Systems AB
  */
 
 #ifndef __VERDIN_AM62_H
@@ -27,6 +28,7 @@
 #if CONFIG_TARGET_VERDIN_AM62_A53
 /* Enable Distro Boot */
 #define BOOT_TARGET_DEVICES(func) \
+	func(USB, usb, 0) \
 	func(MMC, mmc, 1) \
 	func(MMC, mmc, 0) \
 	func(DHCP, dhcp, na)
@@ -45,30 +47,33 @@
 	"ramdisk_addr_r ram " __stringify(RAMDISK_ADDR_R) " 0x8000000\0"
 
 /* Incorporate settings into the U-Boot environment */
+/*m4boot will run in variant of Toradex boot.scr file we just declare it here instead of in the boot.scr file */
 #define CFG_EXTRA_ENV_SETTINGS \
 	BOOTENV \
 	EXTRA_ENV_DFUARGS \
 	MEM_LAYOUT_ENV_SETTINGS \
 	"boot_scripts=boot.scr\0" \
+	"bsp_script=hmm_boot.scr\0" \
 	"boot_script_dhcp=boot.scr\0" \
 	"console=ttyS2\0" \
-	"fdt_board=dev\0" \
+	"fdt_board=hmm\0" \
+	"bootcmd_usb=run try_usb_flash;\0" \
+	"try_usb_flash=sleep 0.1; usb reset; if load usb 0 ${scriptaddr} ${bsp_script} ; then source ${scriptaddr}; else echo UPDATE ERROR: no ${bsp_script} on first USB device. ;fi\0" \
+	"m4addr=0x82000000\0" \
+	"m4_firmware=lib/firmware/am62-mcu-m4f0_0-fw\0" \
+	"m4boot=if ext4size mmc ${root_devnum}:${root_part} ${m4_firmware}; then " \
+		"load mmc ${root_devnum}:${root_part} ${m4addr} ${m4_firmware};" \
+			"if rproc init && rproc load 0 ${m4addr} ${filesize} && rproc start 0; then" \
+				"echo INFO: M4 firmware ${m4_firmware} successfully started;" \
+			"else" \
+				"echo ERROR: Failed to initialize or start M4 firmware;" \
+				"env set script_warning 'M4 firmware ${m4_firmware} initialization/start failed';" \
+			"fi;" \
+		"else" \
+			"echo WARNING: File ${m4_firmware} not found on mmc ${root_devnum}:${root_part}, continue booting;" \
+			"env set script_warning 'File ${m4_firmware} not found on mmc ${root_devnum}:${root_part}, continue booting'" \
+		"fi;\0" \
 	"setup=setenv setupargs console=tty1 console=${console},${baudrate} " \
-		"consoleblank=0 earlycon=ns16550a,mmio32,0x02800000\0" \
-	"update_tiboot3=askenv confirm Did you load tiboot3.bin (y/N)?; " \
-		"if test \"$confirm\" = \"y\"; then " \
-		"setexpr blkcnt ${filesize} + 0x1ff && setexpr blkcnt " \
-		"${blkcnt} / 0x200; mmc dev 0 1; mmc write ${loadaddr} 0x0 " \
-		"${blkcnt}; fi\0" \
-	"update_tispl=askenv confirm Did you load tispl.bin (y/N)?; " \
-		"if test \"$confirm\" = \"y\"; then " \
-		"setexpr blkcnt ${filesize} + 0x1ff && setexpr blkcnt " \
-		"${blkcnt} / 0x200; mmc dev 0 1; mmc write ${loadaddr} 0x400 " \
-		"${blkcnt}; fi\0" \
-	"update_uboot=askenv confirm Did you load u-boot.img (y/N)?; " \
-		"if test \"$confirm\" = \"y\"; then " \
-		"setexpr blkcnt ${filesize} + 0x1ff && setexpr blkcnt " \
-		"${blkcnt} / 0x200; mmc dev 0 1; mmc write ${loadaddr} 0x1400 " \
-		"${blkcnt}; fi\0"
+		"consoleblank=0 earlycon=ns16550a,mmio32,0x02800000\0"
 
-#endif /* __VERDIN_AM62_H */
+#endif /* __VERDIN_AM62_H */
\ No newline at end of file
-- 
2.34.1

