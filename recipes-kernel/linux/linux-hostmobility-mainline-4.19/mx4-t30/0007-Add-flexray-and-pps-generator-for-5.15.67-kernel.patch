From c28e7a69cad47b0236d99f067f8258083f157b4a Mon Sep 17 00:00:00 2001
From: rikardo <rikard.olander@hostmobility.com>
Date: Tue, 13 Sep 2022 14:23:33 +0000
Subject: [PATCH 1/1] Add flexray and pps generator for 5.15.67 kernel

---
 Documentation/networking/00-INDEX       | 236 +++++++++++++++++
 drivers/net/Makefile                    |   1 +
 drivers/pps/generators/Kconfig          |   7 +
 drivers/pps/generators/LICENSE          | 339 ++++++++++++++++++++++++
 drivers/pps/generators/Makefile         |   1 +
 drivers/pps/generators/README.md        |  34 +++
 drivers/pps/generators/pps-gen-gpio.txt |  19 ++
 drivers/pps/generators/pps_gen_gpio.c   | 284 ++++++++++++++++++++
 include/linux/pps_gen_gpio.h            |  18 ++
 include/linux/socket.h                  |  10 +-
 include/net/net_namespace.h             |   3 +
 include/uapi/linux/if_arp.h             |   1 +
 include/uapi/linux/if_ether.h           |   1 +
 net/Kconfig                             |   1 +
 net/Makefile                            |   1 +
 net/core/sock.c                         |   1 +
 16 files changed, 953 insertions(+), 4 deletions(-)
 create mode 100644 Documentation/networking/00-INDEX
 create mode 100644 drivers/pps/generators/LICENSE
 create mode 100644 drivers/pps/generators/README.md
 create mode 100644 drivers/pps/generators/pps-gen-gpio.txt
 create mode 100644 drivers/pps/generators/pps_gen_gpio.c
 create mode 100644 include/linux/pps_gen_gpio.h

diff --git a/Documentation/networking/00-INDEX b/Documentation/networking/00-INDEX
new file mode 100644
index 000000000000..a12e0e023a8b
--- /dev/null
+++ b/Documentation/networking/00-INDEX
@@ -0,0 +1,236 @@
+00-INDEX
+	- this file
+3c509.txt
+	- information on the 3Com Etherlink III Series Ethernet cards.
+6pack.txt
+	- info on the 6pack protocol, an alternative to KISS for AX.25
+LICENSE.qla3xxx
+	- GPLv2 for QLogic Linux Networking HBA Driver
+LICENSE.qlge
+	- GPLv2 for QLogic Linux qlge NIC Driver
+LICENSE.qlcnic
+	- GPLv2 for QLogic Linux qlcnic NIC Driver
+PLIP.txt
+	- PLIP: The Parallel Line Internet Protocol device driver
+README.ipw2100
+	- README for the Intel PRO/Wireless 2100 driver.
+README.ipw2200
+	- README for the Intel PRO/Wireless 2915ABG and 2200BG driver.
+README.sb1000
+	- info on General Instrument/NextLevel SURFboard1000 cable modem.
+altera_tse.txt
+	- Altera Triple-Speed Ethernet controller.
+arcnet-hardware.txt
+	- tons of info on ARCnet, hubs, jumper settings for ARCnet cards, etc.
+arcnet.txt
+	- info on the using the ARCnet driver itself.
+atm.txt
+	- info on where to get ATM programs and support for Linux.
+ax25.txt
+	- info on using AX.25 and NET/ROM code for Linux
+baycom.txt
+	- info on the driver for Baycom style amateur radio modems
+bonding.txt
+	- Linux Ethernet Bonding Driver HOWTO: link aggregation in Linux.
+bridge.txt
+	- where to get user space programs for ethernet bridging with Linux.
+cdc_mbim.txt
+	- 3G/LTE USB modem (Mobile Broadband Interface Model)
+checksum-offloads.txt
+	- Explanation of checksum offloads; LCO, RCO
+cops.txt
+	- info on the COPS LocalTalk Linux driver
+cs89x0.txt
+	- the Crystal LAN (CS8900/20-based) Ethernet ISA adapter driver
+cxacru.txt
+	- Conexant AccessRunner USB ADSL Modem
+cxacru-cf.py
+	- Conexant AccessRunner USB ADSL Modem configuration file parser
+cxgb.txt
+	- Release Notes for the Chelsio N210 Linux device driver.
+dccp.txt
+	- the Datagram Congestion Control Protocol (DCCP) (RFC 4340..42).
+dctcp.txt
+	- DataCenter TCP congestion control
+de4x5.txt
+	- the Digital EtherWORKS DE4?? and DE5?? PCI Ethernet driver
+decnet.txt
+	- info on using the DECnet networking layer in Linux.
+dl2k.txt
+	- README for D-Link DL2000-based Gigabit Ethernet Adapters (dl2k.ko).
+dm9000.txt
+	- README for the Simtec DM9000 Network driver.
+dmfe.txt
+	- info on the Davicom DM9102(A)/DM9132/DM9801 fast ethernet driver.
+dns_resolver.txt
+	- The DNS resolver module allows kernel servies to make DNS queries.
+driver.txt
+	- Softnet driver issues.
+ena.txt
+	- info on Amazon's Elastic Network Adapter (ENA)
+e100.txt
+	- info on Intel's EtherExpress PRO/100 line of 10/100 boards
+e1000.txt
+	- info on Intel's E1000 line of gigabit ethernet boards
+e1000e.txt
+	- README for the Intel Gigabit Ethernet Driver (e1000e).
+eql.txt
+	- serial IP load balancing
+fib_trie.txt
+	- Level Compressed Trie (LC-trie) notes: a structure for routing.
+filter.txt
+	- Linux Socket Filtering
+flexray.txt
+	- FlexRay Protocol Family
+fore200e.txt
+	- FORE Systems PCA-200E/SBA-200E ATM NIC driver info.
+framerelay.txt
+	- info on using Frame Relay/Data Link Connection Identifier (DLCI).
+gen_stats.txt
+	- Generic networking statistics for netlink users.
+generic-hdlc.txt
+	- The generic High Level Data Link Control (HDLC) layer.
+generic_netlink.txt
+	- info on Generic Netlink
+gianfar.txt
+	- Gianfar Ethernet Driver.
+i40e.txt
+	- README for the Intel Ethernet Controller XL710 Driver (i40e).
+i40evf.txt
+	- Short note on the Driver for the Intel(R) XL710 X710 Virtual Function
+ieee802154.txt
+	- Linux IEEE 802.15.4 implementation, API and drivers
+igb.txt
+	- README for the Intel Gigabit Ethernet Driver (igb).
+igbvf.txt
+	- README for the Intel Gigabit Ethernet Driver (igbvf).
+ip-sysctl.txt
+	- /proc/sys/net/ipv4/* variables
+ip_dynaddr.txt
+	- IP dynamic address hack e.g. for auto-dialup links
+ipddp.txt
+	- AppleTalk-IP Decapsulation and AppleTalk-IP Encapsulation
+iphase.txt
+	- Interphase PCI ATM (i)Chip IA Linux driver info.
+ipsec.txt
+	- Note on not compressing IPSec payload and resulting failed policy check.
+ipv6.txt
+	- Options to the ipv6 kernel module.
+ipvs-sysctl.txt
+	- Per-inode explanation of the /proc/sys/net/ipv4/vs interface.
+irda.txt
+	- where to get IrDA (infrared) utilities and info for Linux.
+ixgb.txt
+	- README for the Intel 10 Gigabit Ethernet Driver (ixgb).
+ixgbe.txt
+	- README for the Intel 10 Gigabit Ethernet Driver (ixgbe).
+ixgbevf.txt
+	- README for the Intel Virtual Function (VF) Driver (ixgbevf).
+l2tp.txt
+	- User guide to the L2TP tunnel protocol.
+lapb-module.txt
+	- programming information of the LAPB module.
+ltpc.txt
+	- the Apple or Farallon LocalTalk PC card driver
+mac80211-auth-assoc-deauth.txt
+	- authentication and association / deauth-disassoc with max80211
+mac80211-injection.txt
+	- HOWTO use packet injection with mac80211
+multiqueue.txt
+	- HOWTO for multiqueue network device support.
+netconsole.txt
+	- The network console module netconsole.ko: configuration and notes.
+netdev-features.txt
+	- Network interface features API description.
+netdevices.txt
+	- info on network device driver functions exported to the kernel.
+netif-msg.txt
+	- Design of the network interface message level setting (NETIF_MSG_*).
+netlink_mmap.txt
+	- memory mapped I/O with netlink
+nf_conntrack-sysctl.txt
+	- list of netfilter-sysctl knobs.
+nfc.txt
+	- The Linux Near Field Communication (NFS) subsystem.
+openvswitch.txt
+	- Open vSwitch developer documentation.
+operstates.txt
+	- Overview of network interface operational states.
+packet_mmap.txt
+	- User guide to memory mapped packet socket rings (PACKET_[RT]X_RING).
+phonet.txt
+	- The Phonet packet protocol used in Nokia cellular modems.
+phy.txt
+	- The PHY abstraction layer.
+pktgen.txt
+	- User guide to the kernel packet generator (pktgen.ko).
+policy-routing.txt
+	- IP policy-based routing
+ppp_generic.txt
+	- Information about the generic PPP driver.
+proc_net_tcp.txt
+	- Per inode overview of the /proc/net/tcp and /proc/net/tcp6 interfaces.
+radiotap-headers.txt
+	- Background on radiotap headers.
+ray_cs.txt
+	- Raylink Wireless LAN card driver info.
+rds.txt
+	- Background on the reliable, ordered datagram delivery method RDS.
+regulatory.txt
+	- Overview of the Linux wireless regulatory infrastructure.
+rxrpc.txt
+	- Guide to the RxRPC protocol.
+s2io.txt
+	- Release notes for Neterion Xframe I/II 10GbE driver.
+scaling.txt
+	- Explanation of network scaling techniques: RSS, RPS, RFS, aRFS, XPS.
+sctp.txt
+	- Notes on the Linux kernel implementation of the SCTP protocol.
+secid.txt
+	- Explanation of the secid member in flow structures.
+skfp.txt
+	- SysKonnect FDDI (SK-5xxx, Compaq Netelligent) driver info.
+smc9.txt
+	- the driver for SMC's 9000 series of Ethernet cards
+spider_net.txt
+	- README for the Spidernet Driver (as found in PS3 / Cell BE).
+stmmac.txt
+	- README for the STMicro Synopsys Ethernet driver.
+tc-actions-env-rules.txt
+	- rules for traffic control (tc) actions.
+timestamping.txt
+	- overview of network packet timestamping variants.
+tcp.txt
+	- short blurb on how TCP output takes place.
+tcp-thin.txt
+	- kernel tuning options for low rate 'thin' TCP streams.
+team.txt
+	- pointer to information for ethernet teaming devices.
+tlan.txt
+	- ThunderLAN (Compaq Netelligent 10/100, Olicom OC-2xxx) driver info.
+tproxy.txt
+	- Transparent proxy support user guide.
+tuntap.txt
+	- TUN/TAP device driver, allowing user space Rx/Tx of packets.
+udplite.txt
+	- UDP-Lite protocol (RFC 3828) introduction.
+vortex.txt
+	- info on using 3Com Vortex (3c590, 3c592, 3c595, 3c597) Ethernet cards.
+vxge.txt
+	- README for the Neterion X3100 PCIe Server Adapter.
+vxlan.txt
+	- Virtual extensible LAN overview
+x25.txt
+	- general info on X.25 development.
+x25-iface.txt
+	- description of the X.25 Packet Layer to LAPB device interface.
+xfrm_device.txt
+	- description of XFRM offload API
+xfrm_proc.txt
+	- description of the statistics package for XFRM.
+xfrm_sync.txt
+	- sync patches for XFRM enable migration of an SA between hosts.
+xfrm_sysctl.txt
+	- description of the XFRM configuration options.
+z8530drv.txt
+	- info about Linux driver for Z8530 based HDLC cards for AX.25
diff --git a/drivers/net/Makefile b/drivers/net/Makefile
index 739838623cf6..50a79d43b452 100644
--- a/drivers/net/Makefile
+++ b/drivers/net/Makefile
@@ -87,3 +87,4 @@ thunderbolt-net-y += thunderbolt.o
 obj-$(CONFIG_USB4_NET) += thunderbolt-net.o
 obj-$(CONFIG_NETDEVSIM) += netdevsim/
 obj-$(CONFIG_NET_FAILOVER) += net_failover.o
+obj-$(CONFIG_FLEXRAY) += flexray/
diff --git a/drivers/pps/generators/Kconfig b/drivers/pps/generators/Kconfig
index d615e640fcad..a5d67d3f5f91 100644
--- a/drivers/pps/generators/Kconfig
+++ b/drivers/pps/generators/Kconfig
@@ -12,3 +12,10 @@ config PPS_GENERATOR_PARPORT
 	  If you say yes here you get support for a PPS signal generator which
 	  utilizes STROBE pin of a parallel port to send PPS signals. It uses
 	  parport abstraction layer and hrtimers to precisely control the signal.
+
+config PPS_GENERATOR_GPIO
+	tristate "GPIO PPS signal generator"
+	help
+	  If you say yes here you get support for a PPS signal generator which
+	  utilizes a GPIO pin specified in the Device Tree. It uses hrtimers to 
+	  precisely control the signal.
diff --git a/drivers/pps/generators/LICENSE b/drivers/pps/generators/LICENSE
new file mode 100644
index 000000000000..22fbe5dbacbe
--- /dev/null
+++ b/drivers/pps/generators/LICENSE
@@ -0,0 +1,339 @@
+GNU GENERAL PUBLIC LICENSE
+                       Version 2, June 1991
+
+ Copyright (C) 1989, 1991 Free Software Foundation, Inc., <http://fsf.org/>
+ 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ Everyone is permitted to copy and distribute verbatim copies
+ of this license document, but changing it is not allowed.
+
+                            Preamble
+
+  The licenses for most software are designed to take away your
+freedom to share and change it.  By contrast, the GNU General Public
+License is intended to guarantee your freedom to share and change free
+software--to make sure the software is free for all its users.  This
+General Public License applies to most of the Free Software
+Foundation's software and to any other program whose authors commit to
+using it.  (Some other Free Software Foundation software is covered by
+the GNU Lesser General Public License instead.)  You can apply it to
+your programs, too.
+
+  When we speak of free software, we are referring to freedom, not
+price.  Our General Public Licenses are designed to make sure that you
+have the freedom to distribute copies of free software (and charge for
+this service if you wish), that you receive source code or can get it
+if you want it, that you can change the software or use pieces of it
+in new free programs; and that you know you can do these things.
+
+  To protect your rights, we need to make restrictions that forbid
+anyone to deny you these rights or to ask you to surrender the rights.
+These restrictions translate to certain responsibilities for you if you
+distribute copies of the software, or if you modify it.
+
+  For example, if you distribute copies of such a program, whether
+gratis or for a fee, you must give the recipients all the rights that
+you have.  You must make sure that they, too, receive or can get the
+source code.  And you must show them these terms so they know their
+rights.
+
+  We protect your rights with two steps: (1) copyright the software, and
+(2) offer you this license which gives you legal permission to copy,
+distribute and/or modify the software.
+
+  Also, for each author's protection and ours, we want to make certain
+that everyone understands that there is no warranty for this free
+software.  If the software is modified by someone else and passed on, we
+want its recipients to know that what they have is not the original, so
+that any problems introduced by others will not reflect on the original
+authors' reputations.
+
+  Finally, any free program is threatened constantly by software
+patents.  We wish to avoid the danger that redistributors of a free
+program will individually obtain patent licenses, in effect making the
+program proprietary.  To prevent this, we have made it clear that any
+patent must be licensed for everyone's free use or not licensed at all.
+
+  The precise terms and conditions for copying, distribution and
+modification follow.
+
+                    GNU GENERAL PUBLIC LICENSE
+   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
+
+  0. This License applies to any program or other work which contains
+a notice placed by the copyright holder saying it may be distributed
+under the terms of this General Public License.  The "Program", below,
+refers to any such program or work, and a "work based on the Program"
+means either the Program or any derivative work under copyright law:
+that is to say, a work containing the Program or a portion of it,
+either verbatim or with modifications and/or translated into another
+language.  (Hereinafter, translation is included without limitation in
+the term "modification".)  Each licensee is addressed as "you".
+
+Activities other than copying, distribution and modification are not
+covered by this License; they are outside its scope.  The act of
+running the Program is not restricted, and the output from the Program
+is covered only if its contents constitute a work based on the
+Program (independent of having been made by running the Program).
+Whether that is true depends on what the Program does.
+
+  1. You may copy and distribute verbatim copies of the Program's
+source code as you receive it, in any medium, provided that you
+conspicuously and appropriately publish on each copy an appropriate
+copyright notice and disclaimer of warranty; keep intact all the
+notices that refer to this License and to the absence of any warranty;
+and give any other recipients of the Program a copy of this License
+along with the Program.
+
+You may charge a fee for the physical act of transferring a copy, and
+you may at your option offer warranty protection in exchange for a fee.
+
+  2. You may modify your copy or copies of the Program or any portion
+of it, thus forming a work based on the Program, and copy and
+distribute such modifications or work under the terms of Section 1
+above, provided that you also meet all of these conditions:
+
+    a) You must cause the modified files to carry prominent notices
+    stating that you changed the files and the date of any change.
+
+    b) You must cause any work that you distribute or publish, that in
+    whole or in part contains or is derived from the Program or any
+    part thereof, to be licensed as a whole at no charge to all third
+    parties under the terms of this License.
+
+    c) If the modified program normally reads commands interactively
+    when run, you must cause it, when started running for such
+    interactive use in the most ordinary way, to print or display an
+    announcement including an appropriate copyright notice and a
+    notice that there is no warranty (or else, saying that you provide
+    a warranty) and that users may redistribute the program under
+    these conditions, and telling the user how to view a copy of this
+    License.  (Exception: if the Program itself is interactive but
+    does not normally print such an announcement, your work based on
+    the Program is not required to print an announcement.)
+
+These requirements apply to the modified work as a whole.  If
+identifiable sections of that work are not derived from the Program,
+and can be reasonably considered independent and separate works in
+themselves, then this License, and its terms, do not apply to those
+sections when you distribute them as separate works.  But when you
+distribute the same sections as part of a whole which is a work based
+on the Program, the distribution of the whole must be on the terms of
+this License, whose permissions for other licensees extend to the
+entire whole, and thus to each and every part regardless of who wrote it.
+
+Thus, it is not the intent of this section to claim rights or contest
+your rights to work written entirely by you; rather, the intent is to
+exercise the right to control the distribution of derivative or
+collective works based on the Program.
+
+In addition, mere aggregation of another work not based on the Program
+with the Program (or with a work based on the Program) on a volume of
+a storage or distribution medium does not bring the other work under
+the scope of this License.
+
+  3. You may copy and distribute the Program (or a work based on it,
+under Section 2) in object code or executable form under the terms of
+Sections 1 and 2 above provided that you also do one of the following:
+
+    a) Accompany it with the complete corresponding machine-readable
+    source code, which must be distributed under the terms of Sections
+    1 and 2 above on a medium customarily used for software interchange; or,
+
+    b) Accompany it with a written offer, valid for at least three
+    years, to give any third party, for a charge no more than your
+    cost of physically performing source distribution, a complete
+    machine-readable copy of the corresponding source code, to be
+    distributed under the terms of Sections 1 and 2 above on a medium
+    customarily used for software interchange; or,
+
+    c) Accompany it with the information you received as to the offer
+    to distribute corresponding source code.  (This alternative is
+    allowed only for noncommercial distribution and only if you
+    received the program in object code or executable form with such
+    an offer, in accord with Subsection b above.)
+
+The source code for a work means the preferred form of the work for
+making modifications to it.  For an executable work, complete source
+code means all the source code for all modules it contains, plus any
+associated interface definition files, plus the scripts used to
+control compilation and installation of the executable.  However, as a
+special exception, the source code distributed need not include
+anything that is normally distributed (in either source or binary
+form) with the major components (compiler, kernel, and so on) of the
+operating system on which the executable runs, unless that component
+itself accompanies the executable.
+
+If distribution of executable or object code is made by offering
+access to copy from a designated place, then offering equivalent
+access to copy the source code from the same place counts as
+distribution of the source code, even though third parties are not
+compelled to copy the source along with the object code.
+
+  4. You may not copy, modify, sublicense, or distribute the Program
+except as expressly provided under this License.  Any attempt
+otherwise to copy, modify, sublicense or distribute the Program is
+void, and will automatically terminate your rights under this License.
+However, parties who have received copies, or rights, from you under
+this License will not have their licenses terminated so long as such
+parties remain in full compliance.
+
+  5. You are not required to accept this License, since you have not
+signed it.  However, nothing else grants you permission to modify or
+distribute the Program or its derivative works.  These actions are
+prohibited by law if you do not accept this License.  Therefore, by
+modifying or distributing the Program (or any work based on the
+Program), you indicate your acceptance of this License to do so, and
+all its terms and conditions for copying, distributing or modifying
+the Program or works based on it.
+
+  6. Each time you redistribute the Program (or any work based on the
+Program), the recipient automatically receives a license from the
+original licensor to copy, distribute or modify the Program subject to
+these terms and conditions.  You may not impose any further
+restrictions on the recipients' exercise of the rights granted herein.
+You are not responsible for enforcing compliance by third parties to
+this License.
+
+  7. If, as a consequence of a court judgment or allegation of patent
+infringement or for any other reason (not limited to patent issues),
+conditions are imposed on you (whether by court order, agreement or
+otherwise) that contradict the conditions of this License, they do not
+excuse you from the conditions of this License.  If you cannot
+distribute so as to satisfy simultaneously your obligations under this
+License and any other pertinent obligations, then as a consequence you
+may not distribute the Program at all.  For example, if a patent
+license would not permit royalty-free redistribution of the Program by
+all those who receive copies directly or indirectly through you, then
+the only way you could satisfy both it and this License would be to
+refrain entirely from distribution of the Program.
+
+If any portion of this section is held invalid or unenforceable under
+any particular circumstance, the balance of the section is intended to
+apply and the section as a whole is intended to apply in other
+circumstances.
+
+It is not the purpose of this section to induce you to infringe any
+patents or other property right claims or to contest validity of any
+such claims; this section has the sole purpose of protecting the
+integrity of the free software distribution system, which is
+implemented by public license practices.  Many people have made
+generous contributions to the wide range of software distributed
+through that system in reliance on consistent application of that
+system; it is up to the author/donor to decide if he or she is willing
+to distribute software through any other system and a licensee cannot
+impose that choice.
+
+This section is intended to make thoroughly clear what is believed to
+be a consequence of the rest of this License.
+
+  8. If the distribution and/or use of the Program is restricted in
+certain countries either by patents or by copyrighted interfaces, the
+original copyright holder who places the Program under this License
+may add an explicit geographical distribution limitation excluding
+those countries, so that distribution is permitted only in or among
+countries not thus excluded.  In such case, this License incorporates
+the limitation as if written in the body of this License.
+
+  9. The Free Software Foundation may publish revised and/or new versions
+of the General Public License from time to time.  Such new versions will
+be similar in spirit to the present version, but may differ in detail to
+address new problems or concerns.
+
+Each version is given a distinguishing version number.  If the Program
+specifies a version number of this License which applies to it and "any
+later version", you have the option of following the terms and conditions
+either of that version or of any later version published by the Free
+Software Foundation.  If the Program does not specify a version number of
+this License, you may choose any version ever published by the Free Software
+Foundation.
+
+  10. If you wish to incorporate parts of the Program into other free
+programs whose distribution conditions are different, write to the author
+to ask for permission.  For software which is copyrighted by the Free
+Software Foundation, write to the Free Software Foundation; we sometimes
+make exceptions for this.  Our decision will be guided by the two goals
+of preserving the free status of all derivatives of our free software and
+of promoting the sharing and reuse of software generally.
+
+                            NO WARRANTY
+
+  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY
+FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN
+OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES
+PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED
+OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
+MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS
+TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE
+PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,
+REPAIR OR CORRECTION.
+
+  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
+WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR
+REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,
+INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING
+OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED
+TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY
+YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER
+PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE
+POSSIBILITY OF SUCH DAMAGES.
+
+                     END OF TERMS AND CONDITIONS
+
+            How to Apply These Terms to Your New Programs
+
+  If you develop a new program, and you want it to be of the greatest
+possible use to the public, the best way to achieve this is to make it
+free software which everyone can redistribute and change under these terms.
+
+  To do so, attach the following notices to the program.  It is safest
+to attach them to the start of each source file to most effectively
+convey the exclusion of warranty; and each file should have at least
+the "copyright" line and a pointer to where the full notice is found.
+
+    {description}
+    Copyright (C) {year}  {fullname}
+
+    This program is free software; you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation; either version 2 of the License, or
+    (at your option) any later version.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License along
+    with this program; if not, write to the Free Software Foundation, Inc.,
+    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+
+Also add information on how to contact you by electronic and paper mail.
+
+If the program is interactive, make it output a short notice like this
+when it starts in an interactive mode:
+
+    Gnomovision version 69, Copyright (C) year name of author
+    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
+    This is free software, and you are welcome to redistribute it
+    under certain conditions; type `show c' for details.
+
+The hypothetical commands `show w' and `show c' should show the appropriate
+parts of the General Public License.  Of course, the commands you use may
+be called something other than `show w' and `show c'; they could even be
+mouse-clicks or menu items--whatever suits your program.
+
+You should also get your employer (if you work as a programmer) or your
+school, if any, to sign a "copyright disclaimer" for the program, if
+necessary.  Here is a sample; alter the names:
+
+  Yoyodyne, Inc., hereby disclaims all copyright interest in the program
+  `Gnomovision' (which makes passes at compilers) written by James Hacker.
+
+  {signature of Ty Coon}, 1 April 1989
+  Ty Coon, President of Vice
+
+This General Public License does not permit incorporating your program into
+proprietary programs.  If your program is a subroutine library, you may
+consider it more useful to permit linking proprietary applications with the
+library.  If this is what you want to do, use the GNU Lesser General
+Public License instead of this License.
\ No newline at end of file
diff --git a/drivers/pps/generators/Makefile b/drivers/pps/generators/Makefile
index 2d56dd0495d5..9662a89e5b7a 100644
--- a/drivers/pps/generators/Makefile
+++ b/drivers/pps/generators/Makefile
@@ -4,6 +4,7 @@
 #
 
 obj-$(CONFIG_PPS_GENERATOR_PARPORT) += pps_gen_parport.o
+obj-$(CONFIG_PPS_GENERATOR_GPIO) += pps_gen_gpio.o
 
 ifeq ($(CONFIG_PPS_DEBUG),y)
 EXTRA_CFLAGS += -DDEBUG
diff --git a/drivers/pps/generators/README.md b/drivers/pps/generators/README.md
new file mode 100644
index 000000000000..441f1d354f9e
--- /dev/null
+++ b/drivers/pps/generators/README.md
@@ -0,0 +1,34 @@
+pps-gen-gpio
+============
+
+Linux kernel PPS generator using GPIO pins.
+
+In kernel 3.15 there is no support for using a GPIO pin as a PPS generator, only a GPIO PPS client is available. This module derives from the current parallel port PPS generator, adding code to output a PPS signal through a GPIO pin specified in the device tree.
+
+Tests have been run with a Beaglebone Black, and the corresponding modified device tree file is shown. I have used kernel 3.15.3 with a Beaglebone Black where P9 pin 16 (GPIO1_19) is used as PPS output.
+
+Usage
+-----
+If you use a Beaglebone Black and want to change the PPS output pin, you have to modify your device tree file (am335x-boneblack.dts) accordingly:
+- Make sure you have the right pin multiplexing setting:
+      	
+		pps_gen_pins: pinmux_pps_gen_pins {
+			pinctrl-single,pins = <
+				0x4C (PIN_OUTPUT_PULLDOWN | MUX_MODE7) /* gpmc_a3.gpio1_19 */
+
+Check the [BBB System Reference Manual](https://github.com/CircuitCo/BeagleBone-Black/blob/master/BBB_SRM.pdf?raw=true) and the [am335x Technical Reference Manual](http://www.ti.com/lit/ug/spruh73k/spruh73k.pdf) to find out the correct pinmux table offset of the chosen pin.
+- The pps-gen-gpios property defines the pin you want to use as a PPS output:
+
+		pps-gen {
+				pinctrl-names = "default";
+				pinctrl-0 = <&pps_gen_pins>;
+				compatible = "pps-generator-gpios";
+				pps-gen-gpios = <&gpio1 19 GPIO_ACTIVE_HIGH>;
+
+Please note that in order to use the module with any other board using the device tree infrastructure, the following matching definitions are required in the device tree:
+
+		pps-gen               node defined for the PPS GPIO
+		pps-generator-gpios   value of ".compatible" property in pps-gen node
+		pps-gen-gpios         property in pps-gen node that defines which GPIO pin is used
+		
+After modifying the device tree, add the files into drivers/pps/generators and configure the driver to be built as module. You need to enable PPS support in the kernel.
diff --git a/drivers/pps/generators/pps-gen-gpio.txt b/drivers/pps/generators/pps-gen-gpio.txt
new file mode 100644
index 000000000000..973e5e78aa1a
--- /dev/null
+++ b/drivers/pps/generators/pps-gen-gpio.txt
@@ -0,0 +1,19 @@
+Device-Tree Bindings for a PPS generated signal on GPIO
+
+These properties describe a PPS (pulse-per-second) signal output 
+through a GPIO pin.
+
+Required properties:
+- pps-gen-gpios: one PPS GPIO in the format described by ../gpio/gpio.txt
+
+Optional properties:
+- assert-falling-edge: when present, assert is indicated by a falling edge
+                       (instead of by a rising edge)
+
+Example:
+	pps-gen {
+		compatible = "pps-generator-gpios";
+		pps-gen-gpios = <&gpio2 6 0>;
+
+		assert-falling-edge;
+	};
diff --git a/drivers/pps/generators/pps_gen_gpio.c b/drivers/pps/generators/pps_gen_gpio.c
new file mode 100644
index 000000000000..8be2794ceafc
--- /dev/null
+++ b/drivers/pps/generators/pps_gen_gpio.c
@@ -0,0 +1,284 @@
+/*
+ * pps_gen_gpio.c -- kernel GPIO PPS signal generator
+ *
+ * Copyright (C)  2009   Alexander Gordeev <lasaine@lvk.cs.msu.su>
+ *                2018   Juan Solano <jsm@jsolano.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+#include <linux/kernel.h>
+#include <linux/module.h>
+#include <linux/init.h>
+#include <linux/platform_device.h>
+#include <linux/time.h>
+#include <linux/hrtimer.h>
+#include <linux/gpio.h>
+#include <linux/of_gpio.h>
+
+#define DRVDESC "GPIO PPS signal generator"
+MODULE_AUTHOR("Juan Solano <jsm@jsolano.com>");
+MODULE_DESCRIPTION(DRVDESC);
+MODULE_LICENSE("GPL");
+
+#define GPIO_PULSE_WIDTH_DEF_NS (30 * NSEC_PER_USEC)    /* 30us */
+#define GPIO_PULSE_WIDTH_MAX_NS (100 * NSEC_PER_USEC)   /* 100us */
+#define SAFETY_INTERVAL_NS      (10 * NSEC_PER_USEC)    /* 10us */
+
+enum pps_gen_gpio_level {
+	PPS_GPIO_LOW = 0,
+	PPS_GPIO_HIGH
+};
+
+/* Module parameters. */
+static unsigned int gpio_pulse_width_ns = GPIO_PULSE_WIDTH_DEF_NS;
+MODULE_PARM_DESC(width, "Delay between setting and dropping the signal (ns)");
+module_param_named(width, gpio_pulse_width_ns, uint, 0000);
+
+/* Device private data structure. */
+struct pps_gen_gpio_devdata {
+	struct gpio_desc *pps_gpio;     /* GPIO port descriptor */
+	struct hrtimer timer;
+	long gpio_instr_time;           /* measured port write time (ns) */
+};
+
+/* Average of hrtimer interrupt latency. */
+static long hrtimer_avg_latency = SAFETY_INTERVAL_NS;
+
+/* hrtimer event callback */
+static enum hrtimer_restart hrtimer_callback(struct hrtimer *timer)
+{
+	unsigned long irq_flags;
+	long hrtimer_latency;
+	struct pps_gen_gpio_devdata *devdata =
+		container_of(timer, struct pps_gen_gpio_devdata, timer);
+	const long time_gpio_deassert_ns =
+		NSEC_PER_SEC - devdata->gpio_instr_time;
+	const long time_gpio_assert_ns =
+		time_gpio_deassert_ns - gpio_pulse_width_ns;
+	struct timespec ts_expire_req, ts_expire_real, ts_gpio_instr_time,
+			ts_hrtimer_latency, ts1, ts2;
+
+	/* We have to disable interrupts here. The idea is to prevent
+	 * other interrupts on the same processor to introduce random
+	 * lags while polling the clock; getnstimeofday() takes <1us on
+	 * most machines while other interrupt handlers can take much
+	 * more potentially.
+	 *
+	 * Note: approximate time with blocked interrupts =
+	 * gpio_pulse_width_ns + SAFETY_INTERVAL_NS + average hrtimer latency
+	 */
+	local_irq_save(irq_flags);
+
+	/* Get current timestamp and requested time to check if we are late. */
+	getnstimeofday(&ts_expire_real);
+	ts_expire_req = ktime_to_timespec(hrtimer_get_softexpires(timer));
+	if (ts_expire_req.tv_sec != ts_expire_real.tv_sec
+	    || ts_expire_real.tv_nsec > time_gpio_assert_ns) {
+		local_irq_restore(irq_flags);
+		pr_warn("We are late this time [%ld.%09ld]\n",
+		       ts_expire_real.tv_sec, ts_expire_real.tv_nsec);
+		goto done;
+	}
+
+	/* Busy loop until the time is right for a GPIO assert. */
+	do
+		getnstimeofday(&ts1);
+	while (ts_expire_req.tv_sec == ts1.tv_sec
+	       && ts1.tv_nsec < time_gpio_assert_ns);
+
+	/* Assert PPS GPIO. */
+	gpiod_set_value(devdata->pps_gpio, PPS_GPIO_HIGH);
+
+	/* Busy loop until the time is right for a GPIO deassert. */
+	do
+		getnstimeofday(&ts1);
+	while (ts_expire_req.tv_sec == ts1.tv_sec
+	       && ts1.tv_nsec < time_gpio_deassert_ns);
+
+	/* Deassert PPS GPIO. */
+	gpiod_set_value(devdata->pps_gpio, PPS_GPIO_LOW);
+
+	getnstimeofday(&ts2);
+	local_irq_restore(irq_flags);
+
+	/* Update the calibrated GPIO set instruction time. */
+	ts_gpio_instr_time = timespec_sub(ts2, ts1);
+	devdata->gpio_instr_time = (devdata->gpio_instr_time
+				    + timespec_to_ns(&ts_gpio_instr_time)) / 2;
+
+done:
+	/* Update the average hrtimer latency. */
+	ts_hrtimer_latency = timespec_sub(ts_expire_real, ts_expire_req);
+	hrtimer_latency = timespec_to_ns(&ts_hrtimer_latency);
+
+	/* If the new latency value is bigger then the old, use the new
+	 * value, if not then slowly move towards the new value. This
+	 * way it should be safe in bad conditions and efficient in
+	 * good conditions.
+	 */
+	if (hrtimer_latency > hrtimer_avg_latency)
+		hrtimer_avg_latency = hrtimer_latency;
+	else
+		hrtimer_avg_latency =
+			(3 * hrtimer_avg_latency + hrtimer_latency) / 4;
+
+	/* Update the hrtimer expire time. */
+	hrtimer_set_expires(timer,
+			    ktime_set(ts_expire_req.tv_sec + 1,
+				      time_gpio_assert_ns
+				      - hrtimer_avg_latency
+				      - SAFETY_INTERVAL_NS));
+
+	return HRTIMER_RESTART;
+}
+
+/* Initial calibration of GPIO set instruction time. */
+#define PPS_GEN_CALIBRATE_LOOPS 100
+static void pps_gen_calibrate(struct pps_gen_gpio_devdata *devdata)
+{
+	int i;
+	long time_acc = 0;
+
+	for (i = 0; i < PPS_GEN_CALIBRATE_LOOPS; i++) {
+		struct timespec ts1, ts2, ts_delta;
+		unsigned long irq_flags;
+
+		local_irq_save(irq_flags);
+		getnstimeofday(&ts1);
+		gpiod_set_value(devdata->pps_gpio, PPS_GPIO_LOW);
+		getnstimeofday(&ts2);
+		local_irq_restore(irq_flags);
+
+		ts_delta = timespec_sub(ts2, ts1);
+		time_acc += timespec_to_ns(&ts_delta);
+	}
+
+	devdata->gpio_instr_time = time_acc / PPS_GEN_CALIBRATE_LOOPS;
+	pr_info("PPS GPIO set takes %ldns\n", devdata->gpio_instr_time);
+}
+
+static ktime_t pps_gen_first_timer_event(struct pps_gen_gpio_devdata *devdata)
+{
+	struct timespec ts;
+
+	getnstimeofday(&ts);
+	/* First timer callback will be triggered between 1 and 2 seconds from
+	 * now, synchronized to the tv_sec increment of the wall-clock time.
+	 */
+	return ktime_set(ts.tv_sec + 1,
+			 NSEC_PER_SEC - gpio_pulse_width_ns
+			 - devdata->gpio_instr_time - 3 * SAFETY_INTERVAL_NS);
+}
+
+static int pps_gen_gpio_probe(struct platform_device *pdev)
+{
+	int ret;
+	struct device *dev = &pdev->dev;
+	struct pps_gen_gpio_devdata *devdata;
+
+	/* Allocate space for device info. */
+	devdata = devm_kzalloc(dev,
+			       sizeof(struct pps_gen_gpio_devdata),
+			       GFP_KERNEL);
+	if (!devdata) {
+		ret = -ENOMEM;
+		goto err_alloc;
+	}
+
+	/* There should be a single PPS generator GPIO pin defined in DT. */
+	if (of_gpio_named_count(dev->of_node, "pps-gen-gpio") != 1) {
+		dev_err(dev, "There should be exactly one pps-gen GPIO defined in DT\n");
+		ret = -EINVAL;
+		goto err_dt;
+	}
+
+	devdata->pps_gpio = devm_gpiod_get(dev, "pps-gen", GPIOD_OUT_LOW);
+	if (IS_ERR(devdata->pps_gpio)) {
+		ret = PTR_ERR(devdata->pps_gpio);
+		dev_err(dev, "Cannot get PPS GPIO [%d]\n", ret);
+		goto err_gpio_get;
+	}
+
+	platform_set_drvdata(pdev, devdata);
+
+	ret = gpiod_direction_output(devdata->pps_gpio, PPS_GPIO_HIGH);
+	if (ret < 0) {
+		dev_err(dev, "Cannot configure PPS GPIO\n");
+		goto err_gpio_dir;
+	}
+
+	pps_gen_calibrate(devdata);
+	hrtimer_init(&devdata->timer, CLOCK_REALTIME, HRTIMER_MODE_ABS);
+	devdata->timer.function = hrtimer_callback;
+	hrtimer_start(&devdata->timer,
+		      pps_gen_first_timer_event(devdata),
+		      HRTIMER_MODE_ABS);
+	return 0;
+
+err_gpio_dir:
+	devm_gpiod_put(dev, devdata->pps_gpio);
+err_gpio_get:
+err_dt:
+	devm_kfree(dev, devdata);
+err_alloc:
+	return ret;
+}
+
+static int pps_gen_gpio_remove(struct platform_device *pdev)
+{
+	struct device *dev = &pdev->dev;
+	struct pps_gen_gpio_devdata *devdata = platform_get_drvdata(pdev);
+
+	devm_gpiod_put(dev, devdata->pps_gpio);
+	hrtimer_cancel(&devdata->timer);
+	return 0;
+}
+
+/* The compatible property here defined is searched for in the DT */
+static const struct of_device_id pps_gen_gpio_dt_ids[] = {
+	{ .compatible = "pps-gen-gpio", },
+	{ /* sentinel */ }
+};
+MODULE_DEVICE_TABLE(of, pps_gen_gpio_dt_ids);
+
+static struct platform_driver pps_gen_gpio_driver = {
+	.driver			= {
+		.name		= "pps_gen_gpio",
+		.owner		= THIS_MODULE,
+		.of_match_table = of_match_ptr(pps_gen_gpio_dt_ids),
+	},
+	.probe			= pps_gen_gpio_probe,
+	.remove			= pps_gen_gpio_remove,
+};
+
+static int __init pps_gen_gpio_init(void)
+{
+	pr_info(DRVDESC "\n");
+	if (gpio_pulse_width_ns > GPIO_PULSE_WIDTH_MAX_NS) {
+		pr_err("pps_gen_gpio: width value should be not greater than %ldns\n",
+		       GPIO_PULSE_WIDTH_MAX_NS);
+		return -EINVAL;
+	}
+	platform_driver_register(&pps_gen_gpio_driver);
+	return 0;
+}
+
+static void __exit pps_gen_gpio_exit(void)
+{
+	pr_info("pps_gen_gpio: hrtimer average latency is %ldns\n",
+		hrtimer_avg_latency);
+	platform_driver_unregister(&pps_gen_gpio_driver);
+}
+
+module_init(pps_gen_gpio_init);
+module_exit(pps_gen_gpio_exit);
+
diff --git a/include/linux/pps_gen_gpio.h b/include/linux/pps_gen_gpio.h
new file mode 100644
index 000000000000..34b53d73cf2c
--- /dev/null
+++ b/include/linux/pps_gen_gpio.h
@@ -0,0 +1,18 @@
+/*
+ * Driver model for GPIO PPS generator
+ *
+ * Copyright (C) 2016 Host Mobility AB
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ *
+ */
+#ifndef __LINUX_PPS_GEN_GPIO_H_INCLUDED
+#define __LINUX_PPS_GEN_GPIO_H_INCLUDED
+
+struct pps_gen_gpio_platform_data {
+	unsigned gpio;
+};
+
+#endif
diff --git a/include/linux/socket.h b/include/linux/socket.h
index 041d6032a348..92b915efe1ba 100644
--- a/include/linux/socket.h
+++ b/include/linux/socket.h
@@ -223,11 +223,12 @@ struct ucred {
 				 * reuses AF_INET address family
 				 */
 #define AF_XDP		44	/* XDP sockets			*/
-#define AF_MCTP		45	/* Management component
-				 * transport protocol
-				 */
+#define AF_MCTP                45      /* Management component
+                                * transport protocol
+                                */
+#define AF_FLEXRAY	46	/*Flexray			*/
 
-#define AF_MAX		46	/* For now.. */
+#define AF_MAX		47	/* For now.. */
 
 /* Protocol families, same as address families. */
 #define PF_UNSPEC	AF_UNSPEC
@@ -278,6 +279,7 @@ struct ucred {
 #define PF_SMC		AF_SMC
 #define PF_XDP		AF_XDP
 #define PF_MCTP		AF_MCTP
+#define PF_FLEXRAY	AF_FLEXRAY
 #define PF_MAX		AF_MAX
 
 /* Maximum queue length specifiable by listen.  */
diff --git a/include/net/net_namespace.h b/include/net/net_namespace.h
index 2ba326f9e004..6b74ca07b430 100644
--- a/include/net/net_namespace.h
+++ b/include/net/net_namespace.h
@@ -34,6 +34,7 @@
 #include <net/netns/smc.h>
 #include <net/netns/bpf.h>
 #include <net/netns/mctp.h>
+#include <net/netns/flexray.h>
 #include <linux/ns_common.h>
 #include <linux/idr.h>
 #include <linux/skbuff.h>
@@ -171,6 +172,8 @@ struct net {
 #endif
 #if IS_ENABLED(CONFIG_CRYPTO_USER)
 	struct sock		*crypto_nlsk;
+#if IS_ENABLED(CONFIG_FLEXRAY)
+	struct netns_flexray	flexray;
 #endif
 	struct sock		*diag_nlsk;
 #if IS_ENABLED(CONFIG_SMC)
diff --git a/include/uapi/linux/if_arp.h b/include/uapi/linux/if_arp.h
index 4783af9fe520..4f02e04cc90e 100644
--- a/include/uapi/linux/if_arp.h
+++ b/include/uapi/linux/if_arp.h
@@ -55,6 +55,7 @@
 #define ARPHRD_HWX25	272		/* Boards with X.25 in firmware	*/
 #define ARPHRD_CAN	280		/* Controller Area Network      */
 #define ARPHRD_MCTP	290
+#define ARPHRD_FLEXRAY	300		/* Flexray			*/
 #define ARPHRD_PPP	512
 #define ARPHRD_CISCO	513		/* Cisco HDLC	 		*/
 #define ARPHRD_HDLC	ARPHRD_CISCO
diff --git a/include/uapi/linux/if_ether.h b/include/uapi/linux/if_ether.h
index 5f589c7a8382..e6e9edb64a42 100644
--- a/include/uapi/linux/if_ether.h
+++ b/include/uapi/linux/if_ether.h
@@ -134,6 +134,7 @@
 #define ETH_P_LOCALTALK 0x0009		/* Localtalk pseudo type 	*/
 #define ETH_P_CAN	0x000C		/* CAN: Controller Area Network */
 #define ETH_P_CANFD	0x000D		/* CANFD: CAN flexible data rate*/
+#define ETH_P_FLEXRAY	0x000F		/* Flexray			*/
 #define ETH_P_PPPTALK	0x0010		/* Dummy type for Atalk over PPP*/
 #define ETH_P_TR_802_2	0x0011		/* 802.2 frames 		*/
 #define ETH_P_MOBITEX	0x0015		/* Mobitex (kaz@cafe.net)	*/
diff --git a/net/Kconfig b/net/Kconfig
index fb13460c6dab..479bad5e7afc 100644
--- a/net/Kconfig
+++ b/net/Kconfig
@@ -359,6 +359,7 @@ endmenu
 
 source "net/ax25/Kconfig"
 source "net/can/Kconfig"
+source "net/flexray/Kconfig"
 source "net/bluetooth/Kconfig"
 source "net/rxrpc/Kconfig"
 source "net/kcm/Kconfig"
diff --git a/net/Makefile b/net/Makefile
index fbfeb8a0bb37..0a63be33d54c 100644
--- a/net/Makefile
+++ b/net/Makefile
@@ -31,6 +31,7 @@ obj-$(CONFIG_NETROM)		+= netrom/
 obj-$(CONFIG_ROSE)		+= rose/
 obj-$(CONFIG_AX25)		+= ax25/
 obj-$(CONFIG_CAN)		+= can/
+obj-$(CONFIG_FLEXRAY)		+= flexray/
 obj-$(CONFIG_BT)		+= bluetooth/
 obj-$(CONFIG_SUNRPC)		+= sunrpc/
 obj-$(CONFIG_AF_RXRPC)		+= rxrpc/
diff --git a/net/core/sock.c b/net/core/sock.c
index 9bcffe1d5332..a77ac248e3db 100644
--- a/net/core/sock.c
+++ b/net/core/sock.c
@@ -227,6 +227,7 @@ static struct lock_class_key af_family_kern_slock_keys[AF_MAX];
   x "AF_NFC"   ,	x "AF_VSOCK"    ,	x "AF_KCM"      , \
   x "AF_QIPCRTR",	x "AF_SMC"	,	x "AF_XDP"	, \
   x "AF_MCTP"  , \
+  x "AF_FLEXRAY",
   x "AF_MAX"
 
 static const char *const af_family_key_strings[AF_MAX+1] = {
-- 
2.17.1

