From e3ddd0365f88f8c098e7308cab0e8f91a74e4213 Mon Sep 17 00:00:00 2001
From: rikardo <rikard.olander@hostmobility.com>
Date: Thu, 13 Jun 2024 14:14:00 +0000
Subject: [PATCH 2/3] Add HMM custom eeprom read

---
 board/toradex/common/Makefile     |   2 +
 board/toradex/common/hmm_eeprom.c | 114 ++++++++++++++++++++++++++++++
 board/toradex/common/hmm_eeprom.h |  13 ++++
 3 files changed, 129 insertions(+)
 create mode 100644 board/toradex/common/hmm_eeprom.c
 create mode 100644 board/toradex/common/hmm_eeprom.h

diff --git a/board/toradex/common/Makefile b/board/toradex/common/Makefile
index 7b19b6e4c8..6d66a05e86 100644
--- a/board/toradex/common/Makefile
+++ b/board/toradex/common/Makefile
@@ -9,4 +9,5 @@ else
 obj-$(CONFIG_TDX_CFG_BLOCK) += tdx-cfg-block.o
 obj-y += tdx-common.o
 obj-y += tdx-eeprom.o
+obj-y += hmm_eeprom.o
 endif
diff --git a/board/toradex/common/hmm_eeprom.c b/board/toradex/common/hmm_eeprom.c
new file mode 100644
index 0000000000..744a4e5424
--- /dev/null
+++ b/board/toradex/common/hmm_eeprom.c
@@ -0,0 +1,114 @@
+/*
+ * Copyright (C) 2024 SETEK Systems AB
+ *
+ * SPDX-License-Identifier: GPL-2.0-or-later
+ */
+
+#include <common.h>
+#include <command.h>
+#include <dm.h>
+#include <i2c.h>
+#include <asm/io.h>
+#include <cpu_func.h>
+#include <u-boot/crc.h>
+#include <linux/delay.h>
+
+#include "hmm_eeprom.h"
+
+/* Hmm eeprom i2c register*/
+#define HMM_CPU_ADDRESS 0x54
+#define HMM_CPU_ADDR_LEN 1 // 8bit index
+#define HMM_CPU_READ_TWO_BYTE 2
+#define HMM_UBOOT_ENV_DATA 0x50
+#define HMM_I2C_BUS_ADDR 1
+#define HMM_UBOOT_ENV_START_DATA 0x52
+
+int get_environment_data_from_eeprom(uchar export_data [0xffff])
+{
+	uchar retry;
+	uchar env_length_raw[HMM_CPU_READ_TWO_BYTE] = {0, 0};
+	uint env_length = 0;
+	struct udevice *i2cdev;
+	int rc;
+
+	rc = i2c_get_chip_for_busnum(HMM_I2C_BUS_ADDR, HMM_CPU_ADDRESS, HMM_CPU_ADDR_LEN, &i2cdev);
+	if (rc >= 0) {
+	/*Read UBOOT_ENV_DATA and get the length of env data from the first two bytes.*/
+		for (retry = 0; retry < 10; ++retry) {
+			if (dm_i2c_read(i2cdev, HMM_UBOOT_ENV_DATA, env_length_raw, 2) == 0)
+			{
+				env_length = (env_length_raw[1] << 8) | env_length_raw[0];
+				if (env_length == 0xffff)
+				{
+					printf("Eeprom ENV parameter length is too long, max 0xffff value:%x\n", env_length);
+					return 1;
+				}
+				debug("Debug:Read from co-cpu length, value: %x\n", env_length);
+				/*Read the rest*/
+				if (dm_i2c_read(i2cdev, HMM_UBOOT_ENV_START_DATA, export_data, env_length) == 0)
+				{
+
+					debug("Debug: Import data from eeprom, value: %s\n",export_data);
+					if (export_data == NULL)
+					{
+						printf("Failed to read any data from co-cpu I2C bus\n");
+						continue;
+					}
+					/*fix last character so it is a \n and end of string \0*/
+					export_data[env_length] = '\n';
+					export_data[env_length + 1] = '\0';
+					return 0;
+				}
+				} else {
+					printf("Failed to read from co-cpu address HMM_UBOOT_ENV_START_DATA, value: %x\n", env_length);
+				}
+				printf("Retry reading from co-cpu address 0x100, value: %x\n", env_length);
+				if (retry == 10)
+				{
+					printf("Timeout i2c read co-cpu!\n");
+					return 1;
+				}
+				udelay(500);
+		}
+	} else {
+		printf("%s: cannot get udevice for chip 0x%02x!\n",
+		       __func__, HMM_CPU_ADDRESS);
+		return 1;
+	}
+return 1;
+}
+
+int set_environment_data_from_eeprom(char *data)
+{
+	int err = 1;
+	char *env_list_raw_array[10];
+	char *varname;
+	char *value;
+	u32 index = 0;
+	u32 index2 = 0;
+
+	/*Split int tokens so we can use env_set()*/
+	data = strtok(data, "\n");
+	while (data != NULL)
+	{
+		env_list_raw_array[index++] = data;
+		data = strtok(NULL, "\n");
+	}
+	for (index2 = 0; index2 < index; ++index2)
+	{
+		debug("Debug:%s\n", env_list_raw_array[index2]);
+		if (env_list_raw_array != NULL)
+		{
+			varname = strtok(env_list_raw_array[index2], "=");
+			value = strtok(NULL, "=");
+			debug("Debug: varname,value:%s\n",varname);
+			debug("Debug: value,value:%s\n",value);
+			if ((err = env_set(varname, value)) != 0)
+			{
+				printf("Warning: env_set failed: %u\n", err);
+			}
+		}
+
+	}
+	return err;
+}
diff --git a/board/toradex/common/hmm_eeprom.h b/board/toradex/common/hmm_eeprom.h
new file mode 100644
index 0000000000..4050be78a5
--- /dev/null
+++ b/board/toradex/common/hmm_eeprom.h
@@ -0,0 +1,13 @@
+/*
+ * Copyright (C) 2024 SETEK Systems AB
+ *
+ * SPDX-License-Identifier: GPL-2.0-or-later
+ */
+
+#ifndef HMM_EEPROM_H_
+#define HMM_EEPROM_H_
+
+int get_environment_data_from_eeprom(uchar export_data [0xffff]);
+int set_environment_data_from_eeprom(char *data);
+
+#endif /* HMM_EEPROM_H_ */
-- 
2.34.1

