From eb27f0052bcbd75af5b8aba9630cb0bcc9a86acc Mon Sep 17 00:00:00 2001
From: rikardo <rikard.olander@hostmobility.com>
Date: Tue, 3 Oct 2023 05:36:21 +0000
Subject: [PATCH 1/1] pca953x driver minimize error print out

---
 drivers/gpio/gpio-pca953x.c | 25 ++++++++++++++++++-------
 1 file changed, 18 insertions(+), 7 deletions(-)

diff --git a/drivers/gpio/gpio-pca953x.c b/drivers/gpio/gpio-pca953x.c
index ee55d0b9e455..fd647f1d4600 100644
--- a/drivers/gpio/gpio-pca953x.c
+++ b/drivers/gpio/gpio-pca953x.c
@@ -390,7 +390,8 @@ static u8 pca953x_recalc_addr(struct pca953x_chip *chip, int reg, int off)
 
 	return regaddr;
 }
-
+// HACK: We dont want the chip to send to much error message when the HMX unit goes to super cap mode(shutdown with no power to the board)
+static int error_count = 0;
 static int pca953x_write_regs(struct pca953x_chip *chip, int reg, unsigned long *val)
 {
 	u8 regaddr = pca953x_recalc_addr(chip, reg, 0);
@@ -402,10 +403,14 @@ static int pca953x_write_regs(struct pca953x_chip *chip, int reg, unsigned long
 
 	ret = regmap_bulk_write(chip->regmap, regaddr, value, NBANK(chip));
 	if (ret < 0) {
-		dev_err(&chip->client->dev, "failed writing register\n");
-		return ret;
+		if (error_count == 0) {
+			error_count = 1;
+			dev_err(&chip->client->dev, "failed writing register\n");error_count =1;
+			return ret;
+		}
+		error_count = (error_count + 1) % 100; // wrapping around at 100
+		usleep_range(25000, 30000); // add a delay to minimize spam of faulty write
 	}
-
 	return 0;
 }
 
@@ -416,9 +421,15 @@ static int pca953x_read_regs(struct pca953x_chip *chip, int reg, unsigned long *
 	int i, ret;
 
 	ret = regmap_bulk_read(chip->regmap, regaddr, value, NBANK(chip));
-	if (ret < 0) {
-		dev_err(&chip->client->dev, "failed reading register\n");
-		return ret;
+	if (ret < 0) {	
+		if (error_count == 0) {
+			error_count = 1;
+			dev_err(&chip->client->dev, "failed reading register\n");error_count =1;
+			return ret;
+		}
+		error_count = (error_count + 1) % 100; // wrapping around at 100
+		usleep_range(25000, 30000); // add a delay to minimize spam of faulty reads
+		return 0;
 	}
 
 	for (i = 0; i < NBANK(chip); i++)
-- 
2.34.1

